(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{1306:function(n,i,e){"use strict";e.r(i);var r=e(216),t=e(213),o=e(0),a=e(215);function s(n,i){return function(n){if(Array.isArray(n))return n}(n)||function(n,i){if(!(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n)))return;var e=[],r=!0,t=!1,o=void 0;try{for(var a,s=n[Symbol.iterator]();!(r=(a=s.next()).done)&&(e.push(a.value),!i||e.length!==i);r=!0);}catch(n){t=!0,o=n}finally{try{r||null==s.return||s.return()}finally{if(t)throw o}}return e}(n,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function l(n,i){if(null==n)return{};var e,r,t=function(n,i){if(null==n)return{};var e,r,t={},o=Object.keys(n);for(r=0;r<o.length;r++)e=o[r],i.indexOf(e)>=0||(t[e]=n[e]);return t}(n,i);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)e=o[r],i.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(t[e]=n[e])}return t}i.default=function(n){var i=n.context,e=n.showCode,c=n.showDemo,d=Object(t.useBrand)(),m=d.COLORS,p=d.SPACING,b=(m.tints,l(m,["tints"])),g=s(Object(o.useState)(!0),2),u=g[0],h=g[1],y=s(Object(o.useState)(11),2),j=y[0],f=y[1];return Object(t.jsx)(r.a,{context:i,showCode:e,showDemo:c,scope:{Playground:r.a,context:i,showCode:e,showDemo:c,Intopia:a.a,SPACING:p,showMinor:u,setShowMinor:h,count:j,setCount:f,primaryColors:b},code:'<>\n  <Intopia ignore />\n\n  <h2>Spacing</h2>\n  <label\n    css={{\n      display: "block",\n      marginTop: SPACING(2)\n    }}\n  >\n    Show Minor:{" "}\n    <input\n      type="checkbox"\n      checked={showMinor}\n      onChange={() => setShowMinor(!showMinor)}\n    />\n  </label>\n  <label\n    css={{\n      display: "block",\n      marginTop: SPACING(2)\n    }}\n  >\n    Units:\n    <input\n      type="number"\n      value={count}\n      onChange={e => setCount(parseInt(e.target.value))}\n      css={{\n        marginLeft: SPACING(1),\n        width: "3em"\n      }}\n    />\n  </label>\n\n  <ul\n    css={{\n      listStyle: "none",\n      margin: `${SPACING(5)} 0 0 0`,\n      padding: 0\n    }}\n  >\n    {Array(count)\n      .fill()\n      .map((_, i) => (\n        <li\n          key={i}\n          css={{\n            verticalAlign: "middle",\n            background: i % 2 ? "transparent" : primaryColors.background\n          }}\n        >\n          <span\n            css={{\n              display: "inline-block",\n              minWidth: "1.5em",\n              marginLeft: "0.5em"\n            }}\n          >\n            {i}\n          </span>\n          <div\n            css={{\n              display: "inline-block",\n              verticalAlign: "middle",\n              marginLeft: "1rem"\n            }}\n          >\n            <div\n              css={{\n                margin: "0.5rem 0",\n                verticalAlign: "middle"\n              }}\n            >\n              <div\n                css={{\n                  display: "inline-block",\n                  width: SPACING(i, "minor"),\n                  height: "1rem",\n                  border: `1px solid ${primaryColors.borderDark}`,\n                  background: primaryColors.background,\n                  marginRight: "0.5rem",\n                  opacity: showMinor ? 1 : 0,\n                  transition: "opacity 0.3s ease",\n                  verticalAlign: "middle"\n                }}\n              />\n              <span\n                css={{\n                  verticalAlign: "middle",\n                  fontSize: "12px"\n                }}\n              >\n                {SPACING(i, "minor")} (Minor)\n              </span>\n            </div>\n            <div\n              css={{\n                margin: "0.5rem 0",\n                verticalAlign: "middle"\n              }}\n            >\n              <div\n                css={{\n                  display: "inline-block",\n                  width: SPACING(i),\n                  height: "1rem",\n                  border: `1px solid ${primaryColors.borderDark}`,\n                  background: primaryColors.primary,\n                  marginRight: "0.5rem",\n                  verticalAlign: "middle"\n                }}\n              />\n              <span\n                css={{\n                  verticalAlign: "middle",\n                  fontSize: "12px"\n                }}\n              >\n                {SPACING(i)}\n              </span>\n            </div>\n          </div>\n        </li>\n      ))}\n  </ul>\n</>;\n'},Object(t.jsx)(a.a,{ignore:!0}),Object(t.jsx)("h2",null,"Spacing"),Object(t.jsx)("label",{css:{display:"block",marginTop:p(2)}},"Show Minor:"," ",Object(t.jsx)("input",{type:"checkbox",checked:u,onChange:function(){return h(!u)}})),Object(t.jsx)("label",{css:{display:"block",marginTop:p(2)}},"Units:",Object(t.jsx)("input",{type:"number",value:j,onChange:function(n){return f(parseInt(n.target.value))},css:{marginLeft:p(1),width:"3em"}})),Object(t.jsx)("ul",{css:{listStyle:"none",margin:"".concat(p(5)," 0 0 0"),padding:0}},Array(j).fill().map((function(n,i){return Object(t.jsx)("li",{key:i,css:{verticalAlign:"middle",background:i%2?"transparent":b.background}},Object(t.jsx)("span",{css:{display:"inline-block",minWidth:"1.5em",marginLeft:"0.5em"}},i),Object(t.jsx)("div",{css:{display:"inline-block",verticalAlign:"middle",marginLeft:"1rem"}},Object(t.jsx)("div",{css:{margin:"0.5rem 0",verticalAlign:"middle"}},Object(t.jsx)("div",{css:{display:"inline-block",width:p(i,"minor"),height:"1rem",border:"1px solid ".concat(b.borderDark),background:b.background,marginRight:"0.5rem",opacity:u?1:0,transition:"opacity 0.3s ease",verticalAlign:"middle"}}),Object(t.jsx)("span",{css:{verticalAlign:"middle",fontSize:"12px"}},p(i,"minor")," (Minor)")),Object(t.jsx)("div",{css:{margin:"0.5rem 0",verticalAlign:"middle"}},Object(t.jsx)("div",{css:{display:"inline-block",width:p(i),height:"1rem",border:"1px solid ".concat(b.borderDark),background:b.primary,marginRight:"0.5rem",verticalAlign:"middle"}}),Object(t.jsx)("span",{css:{verticalAlign:"middle",fontSize:"12px"}},p(i)))))}))))}},215:function(n,i,e){"use strict";e.d(i,"a",(function(){return t}));var r=e(213);function t(n){var i=n.ignore,e=n.props;return Object(r.jsx)("div",Object.assign({},e,{css:{background:i?"#f3cccc":"#ffffe5",border:"1px solid #000",padding:"1rem",color:"#000",fontSize:"16px",marginBottom:"1rem","& p:last-child":{marginBottom:0}}}),Object(r.jsx)("strong",null,"INTOPIA NOTES"),Object(r.jsx)("p",null,i?"Ignore this component please":"This component is ready to be tested!"))}}}]);
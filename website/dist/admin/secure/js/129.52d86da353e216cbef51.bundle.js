(window.webpackJsonp=window.webpackJsonp||[]).push([[129,211],{1313:function(e,o,n){"use strict";n.r(o);var t=n(216),r=n(213),c=n(253),s=n(215);o.default=function(e){var o=e.context,n=e.showCode,i=e.showDemo,a={a:[{b:2},{d:4}]},b=b={a:[{c:3},{e:5}]};return Object(r.jsx)(t.a,{context:o,showCode:n,showDemo:i,scope:{Playground:t.a,context:o,showCode:n,showDemo:i,Intopia:s.a,Code:c.Code,object:a,other:b,mergeWith:r.mergeWith},code:'<>\n  <Intopia ignore />\n  <Code>\n    const object = {JSON.stringify(object, null, 2)};\n    {<br css={{ margin: "1rem" }} />}\n    const other = {JSON.stringify(other, null, 2)};\n    {<br css={{ margin: "1rem" }} />}\n    mergeWith(object, other);\n  </Code>\n  =>\n  <Code>{JSON.stringify(mergeWith(object, other), null, 2)}</Code>\n</>;\n'},Object(r.jsx)(s.a,{ignore:!0}),Object(r.jsx)(c.Code,null,"const object = ",JSON.stringify(a,null,2),";",Object(r.jsx)("br",{css:{margin:"1rem"}}),"const other = ",JSON.stringify(b,null,2),";",Object(r.jsx)("br",{css:{margin:"1rem"}}),"mergeWith(object, other);"),"=>",Object(r.jsx)(c.Code,null,JSON.stringify(Object(r.mergeWith)(a,b),null,2)))}},215:function(e,o,n){"use strict";n.d(o,"a",(function(){return r}));var t=n(213);function r(e){var o=e.ignore,n=e.props;return Object(t.jsx)("div",Object.assign({},n,{css:{background:o?"#f3cccc":"#ffffe5",border:"1px solid #000",padding:"1rem",color:"#000",fontSize:"16px",marginBottom:"1rem","& p:last-child":{marginBottom:0}}}),Object(t.jsx)("strong",null,"INTOPIA NOTES"),Object(t.jsx)("p",null,o?"Ignore this component please":"This component is ready to be tested!"))}},253:function(e,o,n){"use strict";n.r(o),n.d(o,"Code",(function(){return r}));var t=n(213),r=(n(267),function(e){var o=e.children,n=Object(t.useBrand)(),r=n.COLORS,c=n.SPACING;return Object(t.jsx)("pre",{css:{boxSizing:"border-box",overflow:"auto",background:r.background,padding:c(2),border:"1px solid ".concat(r.border),marginTop:c(4),tabSize:"2em",MozTabSize:"2em",OTabSize:"2em"}},Object(t.jsx)("code",null,o))})}}]);
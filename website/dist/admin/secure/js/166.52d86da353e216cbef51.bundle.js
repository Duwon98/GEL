(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{1305:function(n,t,e){"use strict";e.r(t);var o=e(216),r=e(213),i=e(215);function a(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){if(!(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n)))return;var e=[],o=!0,r=!1,i=void 0;try{for(var a,s=n[Symbol.iterator]();!(o=(a=s.next()).done)&&(e.push(a.value),!t||e.length!==t);o=!0);}catch(n){r=!0,i=n}finally{try{o||null==s.return||s.return()}finally{if(r)throw i}}return e}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}t.default=function(n){var t=n.context,e=n.showCode,s=n.showDemo,c=Object(r.useBrand)().LAYOUT;return Object(r.jsx)(o.a,{context:t,showCode:e,showDemo:s,scope:{Playground:o.a,context:t,showCode:e,showDemo:s,Intopia:i.a,LAYOUT:c},code:'<>\n  <Intopia ignore />\n  <h2>Layout</h2>\n  Breakpoints:\n  <ul\n    css={{\n      listStyle: "none",\n      margin: 0,\n      padding: 0\n    }}\n  >\n    {Object.entries(LAYOUT.breakpoints).map(([name, breakpoint], i) => (\n      <li key={i}>\n        {name}: {breakpoint}px\n      </li>\n    ))}\n  </ul>\n</>;\n'},Object(r.jsx)(i.a,{ignore:!0}),Object(r.jsx)("h2",null,"Layout"),"Breakpoints:",Object(r.jsx)("ul",{css:{listStyle:"none",margin:0,padding:0}},Object.entries(c.breakpoints).map((function(n,t){var e=a(n,2),o=e[0],i=e[1];return Object(r.jsx)("li",{key:t},o,": ",i,"px")}))))}},215:function(n,t,e){"use strict";e.d(t,"a",(function(){return r}));var o=e(213);function r(n){var t=n.ignore,e=n.props;return Object(o.jsx)("div",Object.assign({},e,{css:{background:t?"#f3cccc":"#ffffe5",border:"1px solid #000",padding:"1rem",color:"#000",fontSize:"16px",marginBottom:"1rem","& p:last-child":{marginBottom:0}}}),Object(o.jsx)("strong",null,"INTOPIA NOTES"),Object(o.jsx)("p",null,t?"Ignore this component please":"This component is ready to be tested!"))}}}]);
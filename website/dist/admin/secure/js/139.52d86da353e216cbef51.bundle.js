(window.webpackJsonp=window.webpackJsonp||[]).push([[139,213],{1344:function(n,e,t){"use strict";t.r(e);var o=t(216),r=t(213),i=t(272),s=t(256),l=t(215);e.default=function(n){var e=n.context,t=n.showCode,c=n.showDemo;return Object(r.jsx)(o.a,{context:e,showCode:t,showDemo:c,scope:{Playground:o.a,context:e,showCode:t,showDemo:c,Intopia:l.a,Grid:i.Grid,Cell:i.Cell,Box:s.Box},code:"<>\n  <Intopia />\n\n  <Grid>\n    <Cell width={[12, 6, 3, 4]}>\n      <Box>[12, 6, 3, 4]</Box>\n    </Cell>\n  </Grid>\n\n  <hr />\n\n  <Grid>\n    <Cell width={[12, 10, 10, 12]}>\n      <Box>[12, 10, 10, 12]</Box>\n    </Cell>\n  </Grid>\n\n  <hr />\n\n  <Grid>\n    <Cell width={[12, 8, 3, 6]}>\n      <Box>[12, 8, 3, 6]</Box>\n    </Cell>\n  </Grid>\n</>;\n"},Object(r.jsx)(l.a,null),Object(r.jsx)(i.Grid,null,Object(r.jsx)(i.Cell,{width:[12,6,3,4]},Object(r.jsx)(s.Box,null,"[12, 6, 3, 4]"))),Object(r.jsx)("hr",null),Object(r.jsx)(i.Grid,null,Object(r.jsx)(i.Cell,{width:[12,10,10,12]},Object(r.jsx)(s.Box,null,"[12, 10, 10, 12]"))),Object(r.jsx)("hr",null),Object(r.jsx)(i.Grid,null,Object(r.jsx)(i.Cell,{width:[12,8,3,6]},Object(r.jsx)(s.Box,null,"[12, 8, 3, 6]"))))}},215:function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));var o=t(213);function r(n){var e=n.ignore,t=n.props;return Object(o.jsx)("div",Object.assign({},t,{css:{background:e?"#f3cccc":"#ffffe5",border:"1px solid #000",padding:"1rem",color:"#000",fontSize:"16px",marginBottom:"1rem","& p:last-child":{marginBottom:0}}}),Object(o.jsx)("strong",null,"INTOPIA NOTES"),Object(o.jsx)("p",null,e?"Ignore this component please":"This component is ready to be tested!"))}},256:function(n,e,t){"use strict";t.r(e),t.d(e,"Box",(function(){return i})),t.d(e,"GridOverlay",(function(){return s}));var o=t(213),r=t(288),i=function(n){var e=Object(o.useBrand)().COLORS;return Object(o.jsx)("div",Object.assign({css:{alignItems:"center",backgroundColor:e.tints.hero10,borderRadius:1,color:e.hero,display:"flex",height:"100%",justifyContent:"center",minHeight:60}},n))},s=function(n){var e=n.children,t=n.columns,i=void 0===t?12:t,s=n.gap;return Object(o.jsx)("div",{css:{height:"100%",position:"relative"}},Object(o.jsx)(r.Grid,{columns:i,gap:s,css:{bottom:"-1.5em",height:"auto",left:0,opacity:.1,pointerEvents:"none",position:"absolute",right:0,top:"-1.5em","@media (min-width: 420px)":{bottom:"-2em",top:"-2em"}}},new Array(i).fill(1).map((function(n,e){return Object(o.jsx)(r.Cell,{key:e,css:{backgroundColor:"rgba(0, 116, 196, 0.3)"}})}))),e)}}}]);
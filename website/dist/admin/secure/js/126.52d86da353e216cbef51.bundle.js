(window.webpackJsonp=window.webpackJsonp||[]).push([[126,211],{1310:function(n,e,t){"use strict";t.r(e);var o=t(216),r=t(213),s=t(253),c=t(215);function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){u(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}e.default=function(n){var e=n.context,t=n.showCode,a=n.showDemo,u=Object(r.useBrand)().TYPE;return Object(r.jsx)(o.a,{context:e,showCode:t,showDemo:a,scope:{Playground:o.a,context:e,showCode:t,showDemo:a,Intopia:c.a,useFonts:r.useFonts,TYPE:u,Code:s.Code},code:'<>\n  <Intopia ignore />\n  <div\n    css={{\n      ...useFonts({ path: "assets/" })\n    }}\n  >\n    <span\n      css={{\n        fontSize: "3rem",\n        fontFamily: TYPE.brandFont.fontFamily\n      }}\n    >\n      <span\n        css={{\n          fontSize: "8rem"\n        }}\n      >\n        ag\n      </span>\n      - This is the brand font\n    </span>\n  </div>\n  <hr />\n  <Code>\n    useFonts({"{"} path: \'path/to/my/fonts/\' {"}"})\n  </Code>\n  =>\n  <Code>\n    {JSON.stringify(useFonts({ path: "path/to/my/fonts/" }), null, 2)}\n  </Code>\n</>;\n'},Object(r.jsx)(c.a,{ignore:!0}),Object(r.jsx)("div",{css:i({},Object(r.useFonts)({path:"assets/"}))},Object(r.jsx)("span",{css:{fontSize:"3rem",fontFamily:u.brandFont.fontFamily}},Object(r.jsx)("span",{css:{fontSize:"8rem"}},"ag"),"- This is the brand font")),Object(r.jsx)("hr",null),Object(r.jsx)(s.Code,null,"useFonts(","{"," path: 'path/to/my/fonts/' ","}",")"),"=>",Object(r.jsx)(s.Code,null,JSON.stringify(Object(r.useFonts)({path:"path/to/my/fonts/"}),null,2)))}},215:function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));var o=t(213);function r(n){var e=n.ignore,t=n.props;return Object(o.jsx)("div",Object.assign({},t,{css:{background:e?"#f3cccc":"#ffffe5",border:"1px solid #000",padding:"1rem",color:"#000",fontSize:"16px",marginBottom:"1rem","& p:last-child":{marginBottom:0}}}),Object(o.jsx)("strong",null,"INTOPIA NOTES"),Object(o.jsx)("p",null,e?"Ignore this component please":"This component is ready to be tested!"))}},253:function(n,e,t){"use strict";t.r(e),t.d(e,"Code",(function(){return r}));var o=t(213),r=(t(267),function(n){var e=n.children,t=Object(o.useBrand)(),r=t.COLORS,s=t.SPACING;return Object(o.jsx)("pre",{css:{boxSizing:"border-box",overflow:"auto",background:r.background,padding:s(2),border:"1px solid ".concat(r.border),marginTop:s(4),tabSize:"2em",MozTabSize:"2em",OTabSize:"2em"}},Object(o.jsx)("code",null,e))})}}]);
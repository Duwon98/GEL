(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{1307:function(n,e,t){"use strict";t.r(e);var o=t(216),i=t(213),r=t(215);function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function c(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}e.default=function(n){var e=n.context,t=(n.showCode,n.showDemo,Object(i.useBrand)().TYPE),s=["100","200","300","400","500","600","700","800","900"];return Object(i.jsx)(o.a,{context:e,css:c({},Object(i.useFonts)({path:"assets/"})),scope:{Playground:o.a,context:e,useFonts:i.useFonts,Intopia:r.a,TYPE:t,weights:s},code:'<>\n  <Intopia ignore />\n\n  <h2>Type</h2>\n  <div\n    css={{\n      marginBottom: "3rem"\n    }}\n  >\n    <span\n      css={{\n        display: "block",\n        fontSize: "3rem",\n        margin: "1rem 0",\n        fontFamily: TYPE.brandFont.fontFamily\n      }}\n    >\n      Brand font\n    </span>\n\n    <ul\n      css={{\n        listStyle: "none",\n        padding: 0,\n        margin: 0\n      }}\n    >\n      {weights.map((weight, i) => (\n        <li\n          key={i}\n          css={{\n            display: "block",\n            fontSize: "2rem",\n            ...TYPE.brandFont[weight]\n          }}\n        >\n          weight {weight}\n        </li>\n      ))}\n    </ul>\n\n    <span\n      css={{\n        display: "block",\n        fontSize: "3rem",\n        margin: "1rem 0",\n        fontFamily: TYPE.bodyFont.fontFamily\n      }}\n    >\n      Body font\n    </span>\n\n    <ul\n      css={{\n        listStyle: "none",\n        padding: 0,\n        margin: 0\n      }}\n    >\n      {weights.map((weight, i) => (\n        <li\n          key={i}\n          css={{\n            display: "block",\n            fontSize: "2rem",\n            ...TYPE.bodyFont[weight]\n          }}\n        >\n          weight {weight}\n        </li>\n      ))}\n    </ul>\n  </div>\n</>;\n'},Object(i.jsx)(r.a,{ignore:!0}),Object(i.jsx)("h2",null,"Type"),Object(i.jsx)("div",{css:{marginBottom:"3rem"}},Object(i.jsx)("span",{css:{display:"block",fontSize:"3rem",margin:"1rem 0",fontFamily:t.brandFont.fontFamily}},"Brand font"),Object(i.jsx)("ul",{css:{listStyle:"none",padding:0,margin:0}},s.map((function(n,e){return Object(i.jsx)("li",{key:e,css:c({display:"block",fontSize:"2rem"},t.brandFont[n])},"weight ",n)}))),Object(i.jsx)("span",{css:{display:"block",fontSize:"3rem",margin:"1rem 0",fontFamily:t.bodyFont.fontFamily}},"Body font"),Object(i.jsx)("ul",{css:{listStyle:"none",padding:0,margin:0}},s.map((function(n,e){return Object(i.jsx)("li",{key:e,css:c({display:"block",fontSize:"2rem"},t.bodyFont[n])},"weight ",n)})))))}},215:function(n,e,t){"use strict";t.d(e,"a",(function(){return i}));var o=t(213);function i(n){var e=n.ignore,t=n.props;return Object(o.jsx)("div",Object.assign({},t,{css:{background:e?"#f3cccc":"#ffffe5",border:"1px solid #000",padding:"1rem",color:"#000",fontSize:"16px",marginBottom:"1rem","& p:last-child":{marginBottom:0}}}),Object(o.jsx)("strong",null,"INTOPIA NOTES"),Object(o.jsx)("p",null,e?"Ignore this component please":"This component is ready to be tested!"))}}}]);
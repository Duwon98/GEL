/** @jsx jsx */

import { GEL, jsx, Global, useBrand, useMediaQuery } from '@westpac/core';
import { Cell, Grid as WBCGrid, Container as WBCContainer } from '@westpac/grid';
import wbc from '@westpac/wbc';
import { Fragment, useState, forwardRef } from 'react';
import {
	WBCLogo,
	STGDragonLogo,
	BOMShieldLogo,
	RAMSLogo,
	BSAStackedLogo,
	WBGLogo,
} from '@westpac/symbol';
import { ArrowRightIcon, ExpandMoreIcon, ExpandLessIcon } from '@westpac/icon';
import { BASE_URL } from '../../config.js';
import { ButtonDropdown, useButtonDropdownContext } from '@westpac/button-dropdown';
import { Button } from '@westpac/button';
import ResizeObserver from 'resize-observer-polyfill';
import { useSpring, animated } from '@react-spring/web';
import useMeasure from 'react-use-measure';
import { PageContextProvider, usePageContext } from '../../components/providers/pageContext';
import { Footer as StickyFooter } from '../../components/layout/footer.js';
import merge from 'lodash.merge';

/* 
TO DO
- action-bar
    - need GEL SVG
    - dropdown hover state
- cards
    - hover
    - need to discuss min height stuff
- spacing
    - double check spacing between homepage content top and bottom
    
Later
- footer links
    - hook up to correct links
- Action bar
    - hook up to correct links
- Refactor out into separate components
- GEL wrapper issues at layout level
- Context Provider for GEL Brand
- fix semantic html
*/

// ============================================================
// Bespoke SVG's
// ============================================================

const GELSvg = (props) => {
	return (
		<svg
			viewBox="0 0 996 635"
			width="996"
			height="635"
			fill="none"
			role="img"
			focusable="false"
			css={{ width: '100%', height: 'auto' }}
			{...props}
		>
			<title>GEL global experience language</title>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M811.934 377.823v-32.458c-63.279 0-114.577-51.291-114.577-114.56 0-63.268 51.298-114.559 114.577-114.559 63.278 0 114.577 51.291 114.577 114.559 0 94.703-88.24 133.844-114.577 147.018Z"
				fill="#263238"
			/>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M738.412 234.497v-.636c0-17.335 12.761-29.025 29.91-29.025 13.481 0 25.444 6.123 26.56 20.913h-16.19c-.798-5.328-4.229-8.111-10.289-8.111-8.056 0-12.923 6.204-12.923 16.461v.636c0 9.225 3.43 16.381 13.321 16.381 7.976 0 11.006-4.057 11.326-8.589H769.44v-11.371h26.799v6.998c0 14.473-9.492 25.366-27.917 25.366-19.382 0-29.91-12.007-29.91-29.023Zm62.614-28.785h39.402v12.562h-23.131v9.782h18.424v11.609h-18.424v10.337h24.407v12.563h-40.678v-56.853Zm62.057 0h-16.431v56.853h37.967v-12.642h-21.536v-44.211ZM683.899 404.285v20.36h2.213v-20.36h-2.213Zm-10.479 25.391c-4.083 0-5.874-1.923-6.243-4.241h2.239c.316 1.581 1.633 2.397 3.978 2.397 2.713 0 4.425-1.291 4.425-4.24v-2.002c-.79 1.343-2.66 2.607-4.662 2.607-3.609 0-6.27-2.739-6.27-6.532v-.184c0-3.74 2.634-6.848 6.428-6.848 2.291 0 3.714 1.106 4.504 2.449v-2.212h2.187v12.853c-.027 4.004-2.74 5.953-6.586 5.953Zm-.026-7.296c2.555 0 4.504-1.791 4.504-4.873v-.184c0-3.082-1.686-4.873-4.373-4.873-2.739 0-4.373 2.028-4.373 4.926v.21c0 3.003 1.923 4.794 4.242 4.794Zm22.353.685c2.766 0 4.505-2.081 4.505-5.189v-.184c0-3.187-1.765-5.242-4.505-5.242-2.766 0-4.505 2.055-4.505 5.215v.211c0 3.134 1.713 5.189 4.505 5.189Zm-6.77-5.189c0 4.03 2.819 7.006 6.744 7.006s6.796-2.871 6.796-7.032v-.211c0-4.135-2.871-7.006-6.77-7.006-3.899 0-6.77 2.897-6.77 7.032v.211Zm23.202 7.006c-2.239 0-3.872-1.132-4.663-2.502v2.265h-2.186v-20.36h2.186v8.903c.791-1.344 2.661-2.555 4.663-2.555 3.609 0 6.27 2.634 6.27 6.927v.211c0 4.214-2.476 7.111-6.27 7.111Zm4.004-7.006c0 3.345-1.475 5.189-4.214 5.189-2.687 0-4.531-1.66-4.531-5.189v-.211c0-3.529 1.949-5.215 4.504-5.215 2.318 0 4.241 1.739 4.241 5.215v.211Zm8.53 7.006c-2.555 0-4.584-1.238-4.584-4.056 0-3.187 3.372-4.267 6.902-4.267h1.976v-1.001c0-2.186-.843-3.108-2.951-3.108-1.896 0-2.95.79-3.161 2.476h-2.186c.289-3.134 2.792-4.293 5.453-4.293 2.634 0 5.031 1.08 5.031 4.925v9.087h-2.186v-1.738c-1.028 1.29-2.266 1.975-4.294 1.975Zm4.294-5.057c0 2.133-1.765 3.319-4.084 3.319-1.923 0-2.607-.896-2.607-2.318 0-2.028 2.028-2.713 4.794-2.713h1.897v1.712Zm5.947 4.82v-20.36h2.213v20.36h-2.213Zm11.474-6.743c0 4.241 2.766 6.98 6.665 6.98 3.108 0 5.4-1.449 5.874-4.214h-2.186c-.29 1.607-1.528 2.397-3.662 2.397-2.818 0-4.32-1.739-4.425-4.873h10.379v-.711c0-4.925-3.003-6.848-6.191-6.848-3.793 0-6.454 2.897-6.454 7.059v.21Zm2.345-1.475h8.061c-.211-2.844-1.686-3.977-3.952-3.977-2.239 0-3.741 1.528-4.109 3.977Zm16.116 1.133-4.926 7.085h2.344l3.793-5.557 3.715 5.557h2.581l-5.031-7.243 4.557-6.532h-2.371l-3.345 5.004-3.372-5.004h-2.555l4.61 6.69Zm9.872 11.879V410.87h2.187v2.318c.79-1.344 2.66-2.555 4.662-2.555 3.609 0 6.27 2.634 6.27 6.927v.211c0 4.214-2.476 7.111-6.27 7.111-2.265 0-3.872-1.132-4.662-2.502v7.059h-2.187Zm10.854-11.563c0 3.345-1.476 5.189-4.215 5.189-2.687 0-4.531-1.66-4.531-5.189v-.211c0-3.529 1.949-5.215 4.504-5.215 2.319 0 4.242 1.739 4.242 5.215v.211Zm10.715 7.006c-3.898 0-6.664-2.739-6.664-6.98v-.21c0-4.162 2.66-7.059 6.454-7.059 3.187 0 6.19 1.923 6.19 6.848v.711h-10.379c.106 3.134 1.607 4.873 4.426 4.873 2.134 0 3.372-.79 3.662-2.397h2.186c-.474 2.765-2.766 4.214-5.875 4.214Zm3.741-8.455h-8.061c.369-2.449 1.87-3.977 4.11-3.977 2.265 0 3.74 1.133 3.951 3.977Zm4.999 8.218V410.87h2.187v2.476c.869-1.554 2.055-2.634 4.531-2.713v2.054c-2.766.132-4.531 1.001-4.531 4.399v7.559h-2.187Zm9.373-13.775v13.775h2.186V410.87h-2.186Zm1.053-2.871c-.79 0-1.449-.659-1.449-1.449s.659-1.448 1.449-1.448a1.46 1.46 0 0 1 1.449 1.448c0 .79-.658 1.449-1.449 1.449Zm3.998 9.903c0 4.241 2.766 6.98 6.665 6.98 3.109 0 5.401-1.449 5.875-4.214h-2.187c-.29 1.607-1.528 2.397-3.661 2.397-2.819 0-4.321-1.739-4.426-4.873h10.379v-.711c0-4.925-3.003-6.848-6.19-6.848-3.794 0-6.455 2.897-6.455 7.059v.21Zm2.345-1.475h8.061c-.211-2.844-1.686-3.977-3.951-3.977-2.239 0-3.741 1.528-4.11 3.977Zm13.06-5.557v13.775h2.187v-8.349c0-2.476 1.818-3.767 3.846-3.767 2.213 0 3.24 1.08 3.24 3.503v8.613h2.187v-8.455c0-4.003-2.002-5.557-4.847-5.557-2.266 0-3.794 1.132-4.426 2.423v-2.186h-2.187Zm20.885 14.012c-3.847 0-6.744-2.713-6.744-6.98v-.21c0-4.215 3.003-7.059 6.691-7.059 2.871 0 5.558 1.317 5.98 4.82h-2.16c-.343-2.186-1.923-3.003-3.82-3.003-2.503 0-4.426 2.002-4.426 5.242v.21c0 3.372 1.844 5.163 4.505 5.163 1.949 0 3.714-1.133 3.951-3.372h2.029c-.29 2.977-2.687 5.189-6.006 5.189Zm7.686-6.98c0 4.241 2.766 6.98 6.665 6.98 3.108 0 5.4-1.449 5.874-4.214h-2.186c-.29 1.607-1.528 2.397-3.662 2.397-2.819 0-4.32-1.739-4.426-4.873h10.379v-.711c0-4.925-3.003-6.848-6.19-6.848-3.793 0-6.454 2.897-6.454 7.059v.21Zm2.344-1.475h8.061c-.21-2.844-1.686-3.977-3.951-3.977-2.239 0-3.741 1.528-4.11 3.977Zm19.509-12.142v20.36h2.212v-20.36h-2.212Zm9.556 20.597c-2.555 0-4.583-1.238-4.583-4.056 0-3.187 3.372-4.267 6.902-4.267h1.975v-1.001c0-2.186-.843-3.108-2.95-3.108-1.897 0-2.951.79-3.161 2.476h-2.187c.29-3.134 2.793-4.293 5.453-4.293 2.635 0 5.032 1.08 5.032 4.925v9.087h-2.187v-1.738c-1.027 1.29-2.265 1.975-4.294 1.975Zm4.294-5.057c0 2.133-1.765 3.319-4.083 3.319-1.923 0-2.608-.896-2.608-2.318 0-2.028 2.028-2.713 4.794-2.713h1.897v1.712Zm5.895 4.82V410.87h2.187v2.186c.632-1.291 2.16-2.423 4.425-2.423 2.845 0 4.847 1.554 4.847 5.557v8.455h-2.186v-8.613c0-2.423-1.027-3.503-3.24-3.503-2.029 0-3.846 1.291-3.846 3.767v8.349h-2.187Zm14.43.79c.369 2.318 2.16 4.241 6.244 4.241 3.846 0 6.559-1.949 6.585-5.953V410.87h-2.186v2.212c-.79-1.343-2.213-2.449-4.505-2.449-3.793 0-6.427 3.108-6.427 6.848v.184c0 3.793 2.66 6.532 6.269 6.532 2.002 0 3.873-1.264 4.663-2.607v2.002c0 2.949-1.712 4.24-4.426 4.24-2.344 0-3.661-.816-3.978-2.397h-2.239Zm6.217-3.055c2.556 0 4.505-1.791 4.505-4.873v-.184c0-3.082-1.686-4.873-4.373-4.873-2.74 0-4.373 2.028-4.373 4.926v.21c0 3.003 1.923 4.794 4.241 4.794Zm10.321-2.792c0 3.793 2.054 5.294 4.794 5.294 2.213 0 3.741-1.132 4.373-2.423v2.186h2.187V410.87h-2.187v8.349c0 2.476-1.844 3.767-3.793 3.767-2.16 0-3.188-1.08-3.188-3.503v-8.613h-2.186v8.718Zm18.645 5.294c-2.555 0-4.584-1.238-4.584-4.056 0-3.187 3.372-4.267 6.902-4.267h1.976v-1.001c0-2.186-.843-3.108-2.951-3.108-1.896 0-2.95.79-3.161 2.476h-2.186c.29-3.134 2.792-4.293 5.453-4.293 2.634 0 5.031 1.08 5.031 4.925v9.087h-2.186v-1.738c-1.028 1.29-2.266 1.975-4.294 1.975Zm4.294-5.057c0 2.133-1.765 3.319-4.083 3.319-1.923 0-2.608-.896-2.608-2.318 0-2.028 2.028-2.713 4.794-2.713h1.897v1.712Zm11.4 9.851c-4.083 0-5.874-1.923-6.243-4.241h2.239c.316 1.581 1.633 2.397 3.978 2.397 2.713 0 4.426-1.291 4.426-4.24v-2.002c-.791 1.343-2.661 2.607-4.663 2.607-3.609 0-6.27-2.739-6.27-6.532v-.184c0-3.74 2.635-6.848 6.428-6.848 2.292 0 3.714 1.106 4.505 2.449v-2.212h2.186v12.853c-.026 4.004-2.74 5.953-6.586 5.953Zm4.479-12.169c0 3.082-1.95 4.873-4.505 4.873-2.318 0-4.241-1.791-4.241-4.794v-.21c0-2.898 1.633-4.926 4.373-4.926 2.687 0 4.373 1.791 4.373 4.873v.184Zm11.585 7.375c-3.899 0-6.665-2.739-6.665-6.98v-.21c0-4.162 2.661-7.059 6.454-7.059 3.188 0 6.191 1.923 6.191 6.848v.711H982.04c.105 3.134 1.606 4.873 4.425 4.873 2.134 0 3.372-.79 3.662-2.397h2.186c-.474 2.765-2.766 4.214-5.874 4.214Zm3.74-8.455h-8.061c.369-2.449 1.871-3.977 4.11-3.977 2.265 0 3.741 1.133 3.951 3.977ZM8.66 588.486V411.09h41.942v177.396H8.66Zm91.756 2.827c-22.148 0-41.705-10.837-41.705-36.987 0-28.977 24.505-40.285 65.503-40.285h11.781v-2.827c0-11.779-2.827-19.554-16.258-19.554-11.545 0-15.786 6.832-16.729 14.607H63.424c1.884-29.684 25.211-44.291 58.905-44.291 33.93 0 55.607 13.9 55.607 46.647v79.863h-40.998v-14.371c-5.891 8.953-16.729 17.198-36.522 17.198Zm35.579-45.939c0 10.601-8.953 17.433-20.97 17.433-9.896 0-14.609-4.476-14.609-11.543 0-10.131 7.54-13.429 24.505-13.429h11.074v7.539Zm54.999 43.112V465.275h42.176v19.789c6.598-12.722 20.028-23.088 40.528-23.088 23.798 0 40.291 14.842 40.291 46.411v80.099h-42.176v-71.618c0-13.9-5.42-20.732-17.672-20.732-12.488 0-20.971 7.539-20.971 23.323v69.027h-42.176Zm131.415 0c3.298 28.035 22.619 45.704 64.56 45.704 44.062 0 68.331-19.318 68.331-56.07V465.275h-42.177v17.433c-7.068-12.486-18.614-20.732-38.17-20.732-28.982 0-52.309 23.088-52.309 59.368v1.885c0 37.929 23.563 59.132 52.309 59.132 18.378 0 31.809-10.837 38.17-22.616v18.847c0 15.313-7.539 25.914-26.154 25.914-15.315 0-20.735-7.068-22.619-16.02h-41.941Zm67.388-37.222c15.08 0 24.505-10.837 24.505-28.271v-1.649c0-16.962-8.718-27.799-24.27-27.799-15.786 0-24.269 11.073-24.269 28.035v1.884c0 16.963 8.954 27.8 24.034 27.8Zm79.292-5.654c0 31.097 17.672 45.703 41.47 45.703 20.499 0 32.516-9.188 39.113-21.909v19.082h42.177V465.275h-42.177v70.911c0 15.784-8.247 23.323-20.97 23.323-12.017 0-17.436-6.832-17.436-20.731v-73.503h-42.177v80.335Zm170.664 45.703c-22.148 0-41.705-10.837-41.705-36.987 0-28.977 24.505-40.285 65.503-40.285h11.781v-2.827c0-11.779-2.827-19.554-16.258-19.554-11.545 0-15.786 6.832-16.729 14.607H602.76c1.885-29.684 25.212-44.291 58.906-44.291 33.93 0 55.607 13.9 55.607 46.647v79.863h-40.998v-14.371c-5.891 8.953-16.729 17.198-36.522 17.198Zm35.579-45.939c0 10.601-8.953 17.433-20.97 17.433-9.896 0-14.609-4.476-14.609-11.543 0-10.131 7.54-13.429 24.505-13.429h11.074v7.539Zm114.19 88.816c-41.941 0-61.262-17.669-64.561-45.704h41.941c1.885 8.952 7.304 16.02 22.62 16.02 18.614 0 26.154-10.601 26.154-25.914v-18.847c-6.362 11.779-19.793 22.616-38.171 22.616-28.746 0-52.308-21.203-52.308-59.132v-1.885c0-36.28 23.326-59.368 52.308-59.368 19.557 0 31.102 8.246 38.171 20.732v-17.433h42.176V578.12c0 36.752-24.269 56.07-68.33 56.07Zm27.332-111.197c0 17.434-9.425 28.271-24.505 28.271-15.08 0-24.033-10.837-24.033-27.8v-1.884c0-16.962 8.482-28.035 24.269-28.035 15.551 0 24.269 10.837 24.269 27.799v1.649Zm115.318 68.32c-38.642 0-66.917-22.616-66.917-62.901v-1.885c0-39.578 29.453-64.551 66.681-64.551 33.694 0 62.676 19.319 62.676 63.609v11.072h-86.709c1.178 16.256 10.603 25.679 25.683 25.679 13.901 0 19.792-6.361 21.441-14.606h39.585c-3.77 27.799-25.212 43.583-62.44 43.583Zm21.442-78.45h-45.24c2.121-14.842 10.839-23.087 23.562-23.087 13.666 0 20.971 8.245 21.678 23.087ZM60.057 412.455C61 439.783 81.5 454.39 116.607 454.39c34.165 0 55.842-13.193 55.842-42.406 0-26.386-16.493-35.338-50.659-39.578-15.08-1.885-20.735-4.241-20.735-10.131 0-5.654 4.713-9.659 13.902-9.659 9.661 0 14.138 4.005 15.787 12.251h38.171c-2.828-29.448-24.034-39.814-54.429-39.814-28.51 0-52.78 13.193-52.78 40.521 0 25.678 13.902 35.337 46.889 39.578 16.965 2.356 22.856 5.183 22.856 11.073 0 6.125-4.713 10.13-15.08 10.13-12.017 0-16.022-4.948-17.436-13.9H60.057Zm116.67 4.948c0 26.15 19.557 36.987 41.705 36.987 19.793 0 30.631-8.246 36.522-17.198v14.371h40.998v-79.864c0-32.747-21.677-46.646-55.607-46.646-33.694 0-57.021 14.606-58.906 44.29h39.585c.943-7.774 5.184-14.606 16.729-14.606 13.431 0 16.258 7.774 16.258 19.553v2.827H242.23c-40.998 0-65.503 11.308-65.503 40.286Zm56.314 8.481c12.017 0 20.97-6.832 20.97-17.434v-7.539h-11.074c-16.965 0-24.505 3.299-24.505 13.429 0 7.067 4.713 11.544 14.609 11.544Zm75.969-97.533v123.211h42.176V380.18c0-13.429 7.54-20.732 18.85-20.732 9.661 0 15.787 6.126 15.787 18.612v73.502h41.705V380.18c0-13.429 7.54-20.732 18.85-20.732 9.661 0 15.787 6.126 15.787 18.612v73.502h42.176v-80.57c0-30.862-16.965-45.939-40.291-45.939-15.551 0-30.16 6.125-40.763 20.496-5.891-13.429-17.201-20.496-33.459-20.496-19.085 0-32.044 10.366-38.642 22.145v-18.847H309.01ZM579.181 454.39c-38.642 0-66.917-22.617-66.917-62.902v-1.885c0-39.578 29.453-64.55 66.682-64.55 33.694 0 62.676 19.318 62.676 63.608v11.073h-86.71c1.178 16.255 10.603 25.678 25.683 25.678 13.902 0 19.793-6.36 21.442-14.606h39.585c-3.77 27.799-25.212 43.584-62.441 43.584Zm21.442-78.451h-45.239c2.12-14.842 10.838-23.087 23.562-23.087 13.666 0 20.97 8.245 21.677 23.087ZM86.888 320.44c-27.804 0-43.355-13.428-43.355-42.405v-54.892H28.69v-28.741h14.844v-25.679H85.71v25.679h24.269v28.741h-24.27v50.887c0 8.952 4.478 12.957 12.489 12.957 4.712 0 8.247-.707 12.017-2.12v32.039l-.189.05c-5.416 1.413-13.356 3.484-23.138 3.484Zm229.507 0c-38.642 0-66.917-22.616-66.917-62.901v-1.885c0-39.579 29.453-64.551 66.681-64.551 33.695 0 62.676 19.318 62.676 63.609v11.072h-86.709c1.178 16.256 10.603 25.679 25.683 25.679 13.902 0 19.792-6.361 21.442-14.606h39.584c-3.77 27.799-25.211 43.583-62.44 43.583Zm21.442-78.45h-45.24c2.121-14.842 10.839-23.087 23.563-23.087 13.666 0 20.97 8.245 21.677 23.087Z"
				fill="#fff"
			/>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M525.709 0v177.396h42.176v-53.949l33.223 53.949h47.125l-43.591-67.848 40.292-55.363h-43.826l-33.223 48.766V0h-42.176ZM0 138.289c.942 27.328 21.442 41.934 56.55 41.934 34.165 0 55.842-13.192 55.842-42.405 0-26.386-16.493-35.338-50.659-39.579-15.08-1.884-20.735-4.24-20.735-10.13 0-5.654 4.713-9.659 13.902-9.659 9.66 0 14.138 4.005 15.787 12.25h38.171c-2.828-29.448-24.034-39.813-54.43-39.813-28.51 0-52.779 13.192-52.779 40.52 0 25.679 13.902 35.338 46.89 39.579 16.964 2.356 22.855 5.183 22.855 11.072 0 6.126-4.713 10.131-15.08 10.131-12.017 0-16.023-4.948-17.436-13.9H0Zm258.403-20.967c0 40.285 28.274 62.901 66.917 62.901 37.228 0 58.67-15.784 62.44-43.583h-39.585c-1.649 8.245-7.54 14.606-21.442 14.606-15.08 0-24.505-9.423-25.683-25.679h86.71v-11.072c0-44.29-28.982-63.608-62.676-63.608-37.229 0-66.681 24.972-66.681 64.55v1.885Zm43.118-15.549h45.24c-.707-14.842-8.011-23.087-21.677-23.087-12.724 0-21.442 8.245-23.563 23.087Zm92.637 41.463c0 26.15 19.557 36.987 41.705 36.987 19.793 0 30.631-8.245 36.522-17.197v14.37h40.998V97.533c0-32.747-21.677-46.646-55.607-46.646-33.694 0-57.021 14.606-58.906 44.29h39.585c.943-7.775 5.184-14.607 16.729-14.607 13.431 0 16.258 7.775 16.258 19.554v2.827h-11.781c-40.998 0-65.503 11.308-65.503 40.285Zm56.314 8.481c12.017 0 20.97-6.832 20.97-17.433v-7.539h-11.074c-16.965 0-24.505 3.299-24.505 13.429 0 7.067 4.713 11.543 14.609 11.543Zm-329.22 165.908V54.196h42.177v18.376c7.068-11.78 19.792-21.674 38.406-21.674 28.746 0 52.073 21.674 52.073 63.844v1.885c0 42.405-23.327 63.608-52.308 63.608-18.615 0-32.045-8.717-38.171-20.967v12.919l.002 42.015c6.597-12.721 20.026-23.087 40.525-23.087 23.798 0 40.291 14.842 40.291 46.411v80.099h-42.176v-71.618c0-13.9-5.419-20.732-17.672-20.732-12.488 0-20.97 7.539-20.97 23.323v69.027h-42.177Zm89.332-201.01c0 20.261-8.482 31.333-24.269 31.333-15.315 0-24.505-10.601-24.505-31.568v-1.885c0-20.732 9.19-31.804 24.505-31.804 14.844 0 24.269 10.365 24.269 32.039v1.885Z"
				fill="#fff"
			/>
		</svg>
	);
};

const DotRAMSLogo = (props) => {
	return (
		<svg
			width="84"
			height="84"
			viewBox="0 0 84 84"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			role="img"
			focusable="false"
			{...props}
		>
			<circle cx="42" cy="42" r="41.5" fill="white" stroke="#CFD8DC" />
			<g clipPath="url(#clip0_658_13661)">
				<path
					d="M22.6482 38.2572C23.264 38.2572 23.828 38.3603 24.3264 38.5621C24.8074 38.7528 25.2463 39.0374 25.6177 39.3997C25.9736 39.7509 26.2543 40.1718 26.4425 40.6365C26.6334 41.115 26.7298 41.6263 26.7264 42.1419C26.7264 42.9584 26.5518 43.6771 26.2081 44.2782C25.9323 44.7599 25.5196 45.1532 24.9755 45.4521C25.1533 45.54 25.3117 45.6447 25.4507 45.7657C25.7039 45.9881 25.9134 46.2539 26.074 46.5556C26.2356 46.8639 26.3518 47.1943 26.4187 47.5364C26.4753 47.8174 26.5179 48.1016 26.5448 48.3843H23.2645C23.1654 47.8483 22.9893 47.4496 22.7382 47.1973C22.4672 46.9239 21.9975 46.785 21.3424 46.785H18.693V48.5828H15.3335V38.8713C15.3424 38.7055 15.4141 38.5495 15.5337 38.4353C15.6534 38.3211 15.8119 38.2574 15.9767 38.2572H22.6482ZM33.8175 38.2572C33.9486 38.2575 34.0766 38.2979 34.1843 38.3731C34.2921 38.4483 34.3746 38.5547 34.4209 38.6782L38.0249 48.3843L27.2064 48.311L30.839 38.6272C30.891 38.5168 30.9729 38.4236 31.0752 38.3581C31.1776 38.2926 31.2963 38.2577 31.4175 38.2572H33.8175ZM42.2959 38.2572C42.5814 38.2572 42.819 38.4454 42.9052 38.7042L45.6678 46.8816L48.2784 38.715C48.319 38.5828 48.4005 38.4671 48.511 38.3848C48.6214 38.3024 48.7551 38.2577 48.8926 38.2572H52.2536C52.4181 38.2579 52.5761 38.3216 52.6955 38.4355C52.8149 38.5494 52.8867 38.7049 52.8963 38.8702L52.8909 45.5818L49.7206 46.3868V43.6571L48.7326 46.5284L42.7818 47.5277L41.4609 43.7363V47.7995L38.2857 47.9942V38.9093C38.2857 38.5501 38.5777 38.2572 38.9354 38.2572H42.2959V38.2572ZM32.5925 42.4267L31.2026 46.3684H33.9366L32.5925 42.4267V42.4267ZM58.4419 37.9458C59.1132 37.9458 59.772 38.0331 60.3926 38.1856C61.0233 38.3346 61.6208 38.601 62.1542 38.9711C62.4737 39.197 62.7593 39.4679 63.0022 39.7756C63.0399 39.8244 63.0711 39.8678 63.1019 39.9101C63.1256 39.9427 63.1493 39.9758 63.1719 40.0105C63.1832 40.0268 63.1934 40.043 63.2042 40.0604C63.3053 40.2105 63.3954 40.3679 63.4736 40.5313C63.5867 40.84 63.4962 41.1736 63.2139 41.3542C62.645 41.7177 61.8509 42.0491 61.5153 42.1636C61.1802 42.2775 60.9658 42.2558 60.7514 41.9466C60.6205 41.7567 60.3037 41.3195 59.9703 41.1085C59.9442 41.0885 59.9172 41.0696 59.8895 41.0521C59.6679 40.9147 59.4232 40.8191 59.1676 40.77C58.7048 40.674 58.1359 40.6327 57.5821 40.7504C57.3796 40.7938 57.1921 40.8698 57.0272 40.9772C56.8656 41.0819 56.7309 41.2148 56.6275 41.3716C56.5311 41.5153 56.4837 41.7085 56.4837 41.9434C56.4837 42.1566 56.5208 42.3258 56.5946 42.4473C56.6453 42.5298 56.7687 42.6573 57.073 42.7999C57.3456 42.9291 57.7346 43.062 58.228 43.1938C58.6305 43.3012 59.1309 43.4314 59.7289 43.5849L54.9192 45.2465C54.7468 45.1326 54.6208 45.0442 54.54 44.9818C54.1437 44.6752 53.8175 44.2863 53.5837 43.8415C53.3392 43.3837 53.2158 42.8254 53.2158 42.1831C53.2158 41.4649 53.372 40.8296 53.6796 40.2964C53.9793 39.7731 54.3881 39.3215 54.8777 38.9727C55.3797 38.6171 55.9404 38.3541 56.5338 38.1959C57.1561 38.0285 57.7977 37.9446 58.4419 37.9463V37.9458ZM21.6182 40.9956H18.693V44.2402H21.6182C22.2167 44.2402 22.6649 44.1117 22.9499 43.8562C23.2268 43.6088 23.3658 43.1824 23.3658 42.5911C23.3658 42.0242 23.2268 41.6146 22.951 41.3727C22.666 41.1231 22.2178 40.9956 21.6182 40.9956V40.9956Z"
					fill="url(#paint0_linear_658_13661)"
				/>
				<path
					fillRule="evenodd"
					clipRule="evenodd"
					d="M58.86 43.3599C59.2521 43.4619 59.7058 43.579 60.2202 43.7103C60.4605 43.7586 60.8112 43.8503 61.2492 43.9815C61.7039 44.1166 62.1607 44.3347 62.6078 44.6304C63.0614 44.9314 63.4579 45.3367 63.7876 45.8358C64.1243 46.3484 64.2951 47.0059 64.2951 47.7909C64.2951 48.4261 64.1712 49.0261 63.9255 49.574C63.6734 50.1307 63.2947 50.6198 62.8201 51.0018C62.3406 51.3962 61.7373 51.7071 61.0315 51.9241C60.3312 52.14 59.5134 52.2495 58.5992 52.2495C57.8606 52.2495 57.1323 52.1562 56.4352 51.9729C55.7295 51.7879 55.097 51.4912 54.5545 51.0924C54.0039 50.6877 53.5549 50.159 53.2433 49.5485C53.0808 49.2257 52.9625 48.8823 52.8915 48.5276V51.2997C52.8915 51.6599 52.6016 51.9517 52.245 51.9517H50.3627C50.0061 51.9517 49.7163 51.6599 49.7163 51.3002V46.0191C50.7937 45.7902 51.8534 45.5385 52.8915 45.264V47.39C52.9502 47.2992 53.0306 47.2245 53.1252 47.1729C53.2198 47.1213 53.3258 47.0943 53.4334 47.0943H55.4466C55.8043 47.0943 56.0365 47.3732 56.0645 47.7453C56.078 47.9146 56.14 48.1278 56.2542 48.3475C56.398 48.6203 56.5849 48.8455 56.8166 49.0147C57.0552 49.1872 57.3413 49.3169 57.6667 49.402C58.2291 49.5485 58.8136 49.5724 59.5032 49.4709C59.7663 49.433 60.0223 49.3559 60.2628 49.242C60.4803 49.1389 60.6718 48.9875 60.8231 48.7993C60.9615 48.6258 61.0278 48.4044 61.0278 48.124C61.0278 47.831 60.9405 47.6021 60.76 47.4247C60.5564 47.2256 60.2822 47.0553 59.9455 46.9202C59.5899 46.777 59.1805 46.65 58.7285 46.5421C58.2598 46.4303 57.7804 46.3045 57.3041 46.1694C56.8107 46.0451 56.3252 45.8911 55.8501 45.7083C55.3807 45.5314 54.9393 45.2865 54.54 44.9813C54.4859 44.9393 54.4331 44.8957 54.3816 44.8506C55.8935 44.4139 57.3875 43.9166 58.86 43.3599ZM41.4577 47.3487V51.2997C41.4577 51.3852 41.4411 51.4699 41.4086 51.5489C41.3762 51.628 41.3286 51.6998 41.2685 51.7603C41.2085 51.8208 41.1372 51.8688 41.0587 51.9016C40.9803 51.9343 40.8961 51.9512 40.8112 51.9512L40.4152 51.9533H36.2973C36.1632 51.9508 36.0333 51.9061 35.9257 51.8256C35.8181 51.7451 35.7382 51.6327 35.6971 51.5042L34.8519 49.0093H30.2814L29.4065 51.5112C29.3637 51.6398 29.282 51.7516 29.1728 51.831C29.0636 51.9103 28.9324 51.9531 28.7977 51.9533H24.2849C23.994 51.9533 23.7488 51.7591 23.667 51.4933C23.5592 51.1206 23.4881 50.6986 23.4585 50.231C23.4246 49.6796 23.3701 49.1296 23.2952 48.5824C23.2846 48.5079 23.272 48.4337 23.2575 48.3599C24.3511 48.3492 25.4445 48.3318 26.5378 48.3079C26.547 48.3963 26.5529 48.4809 26.5594 48.5693C26.5717 48.7836 26.5841 49.0321 26.5965 49.3169C26.6041 49.4888 26.6159 49.6657 26.6299 49.8436L27.2144 48.2894C30.631 48.2015 34.2038 48.0334 37.7793 47.7225L38.283 49.0787V47.6786C39.3427 47.582 40.4023 47.4724 41.4577 47.3487V47.3487ZM15.3335 48.3838L16.1524 48.3854H16.606L16.843 48.386H17.3386L18.693 48.3843V51.3203C18.6885 51.4896 18.6186 51.6504 18.4982 51.7686C18.3777 51.8869 18.2163 51.9531 18.0481 51.9533H15.9816C15.6239 51.9533 15.3351 51.6615 15.3335 51.3018V48.3838ZM48.8419 46.2101L47.02 51.5047C46.978 51.6346 46.8963 51.7478 46.7866 51.8282C46.6768 51.9086 46.5447 51.952 46.4091 51.9523H44.766C44.4891 51.9523 44.2552 51.7765 44.1631 51.5308L42.6671 47.199C43.6627 47.071 44.6496 46.931 45.6317 46.7743L45.6694 46.8784L45.7033 46.7634C46.7614 46.5942 47.8081 46.4173 48.8419 46.2101V46.2101Z"
					fill="#78C339"
				/>
				<path
					d="M51.1633 29.5211C49.8176 32.5921 51.7451 35.5345 55.1202 36.4301C57.5967 37.0865 60.3954 36.186 61.4001 34.2938L61.0348 33.926C60.924 33.8137 60.8617 33.6618 60.8617 33.5034C60.8617 33.3451 60.924 33.1931 61.0348 33.0808L61.7529 32.3572C61.7567 32.3539 61.7599 32.3517 61.7632 32.3479C61.5655 31.1127 60.4972 30.2974 59.4009 29.9946C57.6527 29.5118 56.05 30.1069 55.2662 31.1903C55.1617 31.3335 55.3745 31.4263 55.3745 31.4263C55.3745 31.4263 56.1325 31.7789 56.2467 31.8413C56.3614 31.9053 56.4697 31.7897 56.5306 31.7393C56.9896 31.3585 57.6807 31.0774 58.4484 31.3085C59.5216 31.6324 59.931 32.5058 59.4979 33.3976C58.9203 34.5879 57.2444 34.8748 56.0188 34.5634C54.0223 34.0568 53.3247 32.3246 53.9986 30.6831C54.783 28.7735 57.7896 27.6885 60.4072 28.4616C63.389 29.4104 64.7849 31.9226 63.5706 34.6942C63.3066 35.2953 62.888 35.9093 62.3278 36.4941C62.2733 36.5522 62.2168 36.6086 62.1591 36.665C62.143 36.6802 62.129 36.6954 62.1133 36.7106C62.0377 36.7839 61.9606 36.8557 61.8822 36.926L61.8747 36.933C61.7921 37.0068 61.7082 37.0791 61.6231 37.15C61.6193 37.1527 61.6156 37.1554 61.6123 37.1592C61.5229 37.2325 61.4324 37.3052 61.3387 37.3773C61.3925 37.3974 61.4459 37.4185 61.4987 37.4397L61.5191 37.4478C61.6969 37.5206 61.8712 37.6016 62.0417 37.6903C62.0805 37.7104 62.1171 37.7315 62.1548 37.7516L62.2092 37.7809C62.2502 37.8042 62.29 37.8281 62.3304 37.8525L62.373 37.8769C62.4807 37.9431 62.5869 38.0126 62.6898 38.0847C63.3759 38.5682 63.9307 39.2173 64.3032 39.9725L64.3156 39.998C64.335 40.0376 64.3539 40.0772 64.3722 40.1185L64.3803 40.1364C64.4218 40.2308 64.4611 40.3262 64.4966 40.4223C66.9489 38.6896 67.9574 36.3406 68.1346 35.8535L68.1357 35.8508C68.1378 35.8456 68.1396 35.8404 68.1411 35.835C69.3177 32.572 68.4859 28.5169 64.2327 26.168C63.9941 26.0371 63.7516 25.9137 63.5054 25.798L63.514 25.8061C63.1559 25.6469 62.7871 25.5134 62.4102 25.4069C61.5579 25.1671 60.53 25.0635 59.6972 25.0179C59.4758 25.006 59.2541 25 59.0324 25C55.2904 25 52.3436 26.7549 51.1633 29.5211Z"
					fill="url(#paint1_linear_658_13661)"
				/>
				<path
					d="M62.3289 34.3837C62.2872 34.4255 62.2308 34.449 62.1719 34.449C62.113 34.449 62.0566 34.4255 62.0149 34.3837L61.2973 33.6611C61.2558 33.6191 61.2324 33.5622 61.2324 33.503C61.2324 33.4437 61.2558 33.3868 61.2973 33.3448L62.0149 32.6222C62.0566 32.5805 62.1131 32.5571 62.1719 32.5571C62.2307 32.5571 62.2872 32.5805 62.3289 32.6222L63.046 33.3448C63.0666 33.3655 63.083 33.3901 63.0941 33.4172C63.1053 33.4443 63.111 33.4734 63.111 33.5027C63.111 33.532 63.1053 33.5611 63.0941 33.5881C63.083 33.6152 63.0666 33.6398 63.046 33.6606L62.3295 34.3837H62.3289Z"
					fill="#0083C2"
				/>
				<path
					d="M64.6898 32.6924C64.519 33.3097 63.4927 35.4043 62.3555 36.4567C62.0399 36.7889 61.6999 37.0966 61.3384 37.3773C61.8211 37.559 62.265 37.7923 62.6776 38.0858C63.3218 38.5374 63.8494 39.1374 64.2168 39.8358C64.3175 40.0284 64.4263 40.2297 64.4969 40.4217C66.9513 38.6819 67.963 36.3395 68.1343 35.854C69.4019 32.4038 68.4026 28.0688 63.5024 25.792C65.1832 27.4411 65.4041 30.1834 64.6898 32.6924V32.6924Z"
					fill="url(#paint2_linear_658_13661)"
				/>
			</g>
			<defs>
				<linearGradient
					id="paint0_linear_658_13661"
					x1="39.0846"
					y1="39.7293"
					x2="39.0846"
					y2="48.8335"
					gradientUnits="userSpaceOnUse"
				>
					<stop stopColor="#00B6F1" />
					<stop offset="0.144" stopColor="#00AEEF" />
					<stop offset="0.316" stopColor="#00A0E0" />
					<stop offset="0.643" stopColor="#007DBA" />
					<stop offset="0.644" stopColor="#007DBA" />
					<stop offset="1" stopColor="#005282" />
				</linearGradient>
				<linearGradient
					id="paint1_linear_658_13661"
					x1="56.0805"
					y1="33.1955"
					x2="65.0183"
					y2="32.079"
					gradientUnits="userSpaceOnUse"
				>
					<stop stopColor="#0083C2" />
					<stop offset="0.629" stopColor="#0081C0" />
					<stop offset="0.733" stopColor="#007CB9" />
					<stop offset="0.807" stopColor="#0072AE" />
					<stop offset="0.867" stopColor="#00659D" />
					<stop offset="0.918" stopColor="#005387" />
					<stop offset="1" stopColor="#004474" />
				</linearGradient>
				<linearGradient
					id="paint2_linear_658_13661"
					x1="65.7998"
					y1="25.6559"
					x2="58.6335"
					y2="41.0551"
					gradientUnits="userSpaceOnUse"
				>
					<stop stopColor="#6DCFF6" />
					<stop offset="0.431" stopColor="#00AEEF" />
					<stop offset="0.782" stopColor="#0088C7" />
					<stop offset="1" stopColor="#0072AA" />
				</linearGradient>
				<clipPath id="clip0_658_13661">
					<rect width="53.3333" height="27.6667" fill="white" transform="translate(15.3335 25)" />
				</clipPath>
			</defs>
		</svg>
	);
};

const DotBSALogo = (props) => {
	return (
		<svg
			width="84"
			height="84"
			viewBox="0 0 84 84"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			role="img"
			focusable="false"
			{...props}
		>
			<circle cx="42" cy="42" r="41.5" fill="white" stroke="#CFD8DC" />
			<g clipPath="url(#clip0_658_13604)">
				<path
					d="M29.4259 54.6531C29.004 54.6531 28.6665 54.3149 28.6665 53.9766V34.6951C28.6665 34.3568 29.004 34.0186 29.4259 34.0186H54.9071C55.329 34.0186 55.6665 34.3568 55.6665 34.6951V66.3235C55.6665 66.6618 55.4978 67 54.9071 67C54.4009 67 54.2321 66.5772 54.1478 66.4081C46.8915 53.9766 29.4259 54.6531 29.4259 54.6531Z"
					fill="#E91B2B"
				/>
				<path
					d="M47.7352 39.6847L46.0477 46.6192C46.0477 46.6192 46.0477 46.7038 46.132 46.7038H49.6758C49.6758 46.7038 49.7602 46.7038 49.7602 46.6192L48.0727 39.6847C47.9883 39.3464 47.8195 39.3464 47.7352 39.6847ZM49.5914 36.2174C49.9289 36.2174 50.0977 36.3865 50.182 36.6402L53.9789 51.5242C54.0633 51.6933 54.0633 51.8624 54.0633 51.947C54.0633 52.2007 53.8102 52.4544 53.4727 52.4544H51.6164C51.2789 52.4544 51.1102 52.2007 51.0258 51.947L50.2664 49.1563C50.2664 49.1563 50.2664 49.1563 50.182 49.1563H45.3727C45.3727 49.1563 45.3727 49.1563 45.2883 49.1563L44.6977 51.8624C44.6133 52.1161 44.4445 52.3698 44.107 52.3698H42.2508C41.9133 52.3698 41.6602 52.1161 41.6602 51.8624C41.6602 51.8624 41.6602 51.6933 41.7445 51.4396L45.5414 36.5557C45.6258 36.3019 45.7945 36.1328 46.132 36.1328L49.5914 36.2174Z"
					fill="white"
				/>
				<path
					d="M33.4759 40.1074C33.4759 41.2068 34.0665 41.6296 35.3321 42.3907L38.2009 43.9975C40.1415 45.0969 40.9009 46.3654 40.9009 48.4796C40.9009 51.3549 38.7915 52.708 35.6696 52.708C32.6321 52.708 30.354 51.3549 30.354 48.3951V47.4648C30.354 47.1265 30.6915 46.7883 31.1134 46.7883H32.7165C33.1384 46.7883 33.4759 47.042 33.4759 47.4648V48.3951C33.4759 49.579 34.3196 50.2555 35.5853 50.2555C36.9353 50.2555 37.6946 49.6636 37.6946 48.4796C37.6946 47.042 36.429 46.3654 35.5853 45.858L32.379 43.9975C30.9446 43.2364 30.354 41.6296 30.354 40.3611C30.354 37.4858 32.4634 35.7944 35.5853 35.7944C38.6228 35.7944 40.8165 37.3167 40.8165 40.192V40.6994C40.8165 41.0376 40.479 41.3759 40.0571 41.3759H38.454C38.0321 41.3759 37.6946 41.1222 37.6946 40.6994V40.192C37.6946 39.008 36.9353 38.0778 35.5853 38.0778C34.2353 38.0778 33.4759 38.8389 33.4759 40.1074Z"
					fill="white"
				/>
				<path
					d="M39.5507 27.7609L37.7788 28.522C37.2726 28.7757 37.1882 29.114 37.1882 29.3677C37.1882 29.8751 37.3569 30.2979 38.3694 30.2979C39.0444 30.2979 39.6351 29.7905 39.6351 29.1985L39.5507 27.7609ZM35.2476 29.5368C35.2476 28.3529 35.8382 27.6763 36.7663 27.3381L38.7913 26.6615C39.3819 26.4078 39.6351 26.2387 39.6351 25.9004C39.6351 25.393 39.2132 25.0547 38.5382 25.0547C37.8632 25.0547 37.4413 25.393 37.4413 25.985C37.4413 26.2387 37.2726 26.4078 37.0194 26.4078H36.1757C35.9226 26.4078 35.7538 26.2387 35.7538 25.985C35.7538 24.6319 36.9351 23.6171 38.6226 23.6171C40.4788 23.5325 41.3226 24.7164 41.3226 26.0695V31.059C41.3226 31.3127 41.1538 31.4819 40.9007 31.4819H40.0569C39.8038 31.4819 39.6351 31.3127 39.6351 31.059V30.9745C39.6351 30.8053 39.5507 30.8053 39.4663 30.8899C39.0444 31.3127 38.3694 31.5664 37.6101 31.5664C36.5976 31.5664 35.2476 31.1436 35.2476 29.5368Z"
					fill="#002F6C"
				/>
				<path
					d="M49.5073 21.7563C49.5073 21.5026 49.6761 21.3335 49.9292 21.3335H50.7729C51.0261 21.3335 51.1948 21.5026 51.1948 21.7563V26.6613C51.1948 26.8304 51.2792 26.8304 51.3636 26.7458L53.3042 24.3779C53.4729 24.2088 53.5573 24.0397 53.8104 24.0397H54.9073C55.1604 24.0397 55.3292 24.1242 55.3292 24.2934C55.3292 24.3779 55.3292 24.4625 55.2448 24.5471L53.0511 27.2532V27.3378L55.5823 30.8897C55.6667 30.9742 55.6667 31.0588 55.6667 31.1434C55.6667 31.3971 55.4979 31.4816 55.1604 31.4816H54.1479C53.8948 31.4816 53.7261 31.3125 53.5573 31.0588L51.4479 27.9298C51.3636 27.7607 51.2792 27.8452 51.2792 28.0144V31.1434C51.2792 31.3971 51.1104 31.5662 50.8573 31.5662H50.0136C49.7604 31.5662 49.5917 31.3971 49.5917 31.1434L49.5073 21.7563Z"
					fill="#002F6C"
				/>
				<path
					d="M48.3259 25.6464C48.3259 24.547 47.4821 23.5322 46.2165 23.5322C45.4571 23.5322 44.7821 23.8705 44.4446 24.3779C44.3603 24.547 44.2759 24.4625 44.2759 24.2933V24.2088C44.2759 23.9551 44.1071 23.7859 43.854 23.7859H43.0103C42.7571 23.7859 42.5884 23.9551 42.5884 24.2088V26.7458V30.7205V31.0588C42.5884 31.3125 42.7571 31.4816 43.0103 31.4816H43.854C44.1071 31.4816 44.2759 31.3125 44.2759 31.0588V30.7205V25.6464C44.4446 25.3927 44.7821 25.0544 45.1196 24.9699C45.204 24.9699 45.2884 24.9699 45.3728 24.9699C45.7103 24.9699 45.9634 25.0544 46.1321 25.2236C46.3009 25.3927 46.3853 25.5619 46.3853 25.8156C46.3853 25.9001 46.3853 25.9847 46.3853 26.0693V30.9742C46.3853 31.2279 46.554 31.397 46.8071 31.397H47.6509C47.904 31.397 48.0728 31.2279 48.0728 30.9742L48.3259 25.6464Z"
					fill="#002F6C"
				/>
				<path
					d="M34.4884 25.5619C34.4884 24.4625 33.5603 23.6168 32.379 23.6168C31.6196 23.6168 30.9446 23.9551 30.6071 24.4625C30.5228 24.5471 30.4384 24.4625 30.4384 24.3779V21.7563C30.4384 21.5026 30.2696 21.3335 30.0165 21.3335H29.1728C28.8353 21.3335 28.6665 21.5026 28.6665 21.7563V31.0588C28.6665 31.2279 28.8353 31.4816 29.0884 31.4816H29.9321C30.1853 31.4816 30.354 31.3125 30.354 31.0588V30.9742C30.354 30.8051 30.4384 30.8051 30.5228 30.8897C30.8603 31.3971 31.5353 31.6508 32.2946 31.6508C33.4759 31.6508 34.404 30.8051 34.404 29.6212C34.404 29.6212 34.404 28.86 34.404 27.6761C34.404 26.4921 34.4884 25.5619 34.4884 25.5619ZM32.7165 29.1137C32.7165 29.7903 32.2946 30.2131 31.6196 30.2131C31.1978 30.2131 30.6915 29.9594 30.5228 29.5366V25.8156C30.6915 25.3928 31.1978 25.1391 31.6196 25.1391C32.2946 25.1391 32.7165 25.6465 32.7165 26.2384C32.7165 26.2384 32.7165 26.6613 32.7165 27.5915C32.7165 28.5218 32.7165 29.1137 32.7165 29.1137Z"
					fill="#002F6C"
				/>
			</g>
			<defs>
				<clipPath id="clip0_658_13604">
					<rect width="27" height="45.6667" fill="white" transform="translate(28.6665 21.3335)" />
				</clipPath>
			</defs>
		</svg>
	);
};

const DotSubscribeLogo = (props) => {
	return (
		<svg
			width="84"
			height="84"
			viewBox="0 0 84 84"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			role="img"
			focusable="false"
			{...props}
		>
			<circle cx="42" cy="42" r="41.5" fill="white" stroke="#CFD8DC" />
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M54.8134 30.6793C55.5066 31.3726 55.5066 32.4924 54.8134 33.1857L51.5605 36.4386L44.8948 29.7728L48.1477 26.5199C48.8409 25.8267 49.9607 25.8267 50.654 26.5199L54.8134 30.6793ZM28.6667 46.0009V52.6667H35.3324L49.6586 38.3405L42.9928 31.6748L28.6667 46.0009ZM26 55.3333H58V58H26V55.3333Z"
				fill="#1976D2"
			/>
		</svg>
	);
};

const DotFigmaLogo = (props) => {
	return (
		<svg
			width="84"
			height="84"
			viewBox="0 0 84 84"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			role="img"
			focusable="false"
			{...props}
		>
			<circle cx="42" cy="42" r="41.5" fill="white" stroke="#CFD8DC" />
			<g clipPath="url(#clip0_658_13694)">
				<path
					d="M42.1108 42.0001C42.1108 40.0846 42.8718 38.2476 44.2262 36.8932C45.5806 35.5387 47.4176 34.7778 49.3331 34.7778C51.2485 34.7778 53.0855 35.5387 54.4399 36.8932C55.7944 38.2476 56.5553 40.0846 56.5553 42.0001C56.5553 43.9155 55.7944 45.7525 54.4399 47.1069C53.0855 48.4614 51.2485 49.2223 49.3331 49.2223C47.4176 49.2223 45.5806 48.4614 44.2262 47.1069C42.8718 45.7525 42.1108 43.9155 42.1108 42.0001V42.0001Z"
					fill="#1ABCFE"
				/>
				<path
					d="M27.6665 56.4444C27.6665 54.5289 28.4274 52.6919 29.7818 51.3375C31.1363 49.9831 32.9733 49.2222 34.8887 49.2222H42.1109V56.4444C42.1109 58.3598 41.35 60.1968 39.9956 61.5513C38.6412 62.9057 36.8042 63.6666 34.8887 63.6666C32.9733 63.6666 31.1363 62.9057 29.7818 61.5513C28.4274 60.1968 27.6665 58.3598 27.6665 56.4444V56.4444Z"
					fill="#0ACF83"
				/>
				<path
					d="M42.1108 20.3335V34.7779H49.3331C51.2485 34.7779 53.0855 34.017 54.4399 32.6626C55.7944 31.3082 56.5553 29.4712 56.5553 27.5557C56.5553 25.6403 55.7944 23.8033 54.4399 22.4488C53.0855 21.0944 51.2485 20.3335 49.3331 20.3335H42.1108Z"
					fill="#FF7262"
				/>
				<path
					d="M27.6665 27.5557C27.6665 29.4712 28.4274 31.3082 29.7818 32.6626C31.1363 34.017 32.9733 34.7779 34.8887 34.7779H42.1109V20.3335H34.8887C32.9733 20.3335 31.1363 21.0944 29.7818 22.4488C28.4274 23.8033 27.6665 25.6403 27.6665 27.5557V27.5557Z"
					fill="#F24E1E"
				/>
				<path
					d="M27.6665 42.0001C27.6665 43.9155 28.4274 45.7525 29.7818 47.1069C31.1363 48.4614 32.9733 49.2223 34.8887 49.2223H42.1109V34.7778H34.8887C32.9733 34.7778 31.1363 35.5387 29.7818 36.8932C28.4274 38.2476 27.6665 40.0846 27.6665 42.0001V42.0001Z"
					fill="#A259FF"
				/>
			</g>
			<defs>
				<clipPath id="clip0_658_13694">
					<rect
						width="28.8889"
						height="43.3333"
						fill="white"
						transform="translate(27.6665 20.3335)"
					/>
				</clipPath>
			</defs>
		</svg>
	);
};

const DotBOMLogo = (props) => {
	return (
		<svg
			width="84"
			height="84"
			viewBox="0 0 84 84"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			role="img"
			focusable="false"
			{...props}
		>
			<circle cx="42" cy="42" r="41.5" fill="white" stroke="#CFD8DC" />
			<g clipPath="url(#clip0_658_13632)">
				<path d="M28 24.3335V38.3335L35 31.3335L28 24.3335Z" fill="#685AC0" />
				<path d="M42 24.3335H28L35 31.3335L42 24.3335Z" fill="#A094FC" />
				<path d="M42 38.3335V24.3335L35 31.3335L42 38.3335Z" fill="#685AC0" />
				<path d="M28 38.3335H42L35 31.3335L28 38.3335Z" fill="#20024E" />
				<path d="M42 24.3335V38.3335L49 31.3335L42 24.3335Z" fill="#C2BFEB" />
				<path d="M56 24.3335H42L49 31.3335L56 24.3335Z" fill="#685AC0" />
				<path d="M56 38.3335V24.3335L49 31.3335L56 38.3335Z" fill="#20024E" />
				<path d="M42 38.3335H56L49 31.3335L42 38.3335Z" fill="#685AC0" />
				<path d="M42 38.3335V52.3335L49 45.3335L42 38.3335Z" fill="#C2BFEB" />
				<path d="M56 38.3335H42L49 45.3335L56 38.3335Z" fill="#A094FC" />
				<path d="M56 52.3335V38.3335L49 45.3335L56 52.3335Z" fill="#685AC0" />
				<path d="M42 52.3335H56L49 45.3335L42 52.3335Z" fill="#20024E" />
				<path d="M28 38.3335V52.3335L35 45.3335L28 38.3335Z" fill="#685AC0" />
				<path d="M42 38.3335H28L35 45.3335L42 38.3335Z" fill="#C2BFEB" />
				<path d="M42 52.3335V38.3335L35 45.3335L42 52.3335Z" fill="#20024E" />
				<path d="M28 52.3335H42L35 45.3335L28 52.3335Z" fill="#A094FC" />
				<path d="M42 52.3335V66.3335L49 59.3335L42 52.3335Z" fill="#C2BFEB" />
				<path d="M56 52.3335H42L49 59.3335L56 52.3335Z" fill="#685AC0" />
				<path d="M42 52.3335H28L35 59.3335L42 52.3335Z" fill="#C2BFEB" />
				<path d="M42 66.3335V52.3335L35 59.3335L42 66.3335Z" fill="#20024E" />
			</g>
			<defs>
				<clipPath id="clip0_658_13632">
					<rect width="28" height="42" fill="white" transform="translate(28 24.3335)" />
				</clipPath>
			</defs>
		</svg>
	);
};

const DotWBGLogo = (props) => {
	return (
		<svg
			width="84"
			height="84"
			viewBox="0 0 84 84"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			role="img"
			focusable="false"
			{...props}
		>
			<circle cx="42" cy="42" r="41.5" fill="white" stroke="#CFD8DC" />
			<g clipPath="url(#clip0_658_13593)">
				<path
					d="M66.7707 42.3788V38.6909H68.898C70.2524 38.6909 71.1774 39.3146 71.1774 40.5081V40.5298C71.1774 41.6478 70.2309 42.3788 68.8343 42.3788H66.7707ZM66.2121 45.6988H66.7707V42.894H68.8016C70.3718 42.894 71.7363 42.0768 71.7363 40.4974V40.4757C71.7363 39.025 70.5974 38.1757 68.9411 38.1757H66.2121V45.6988V45.6988ZM61.1504 45.8185C62.9769 45.8185 64.2343 44.667 64.2343 42.5072V38.1757H63.676V42.5729C63.676 44.3884 62.698 45.3126 61.1709 45.3126C59.5802 45.3126 58.6231 44.2915 58.6231 42.5179V38.1757H58.0647V42.5729C58.0647 44.6788 59.3445 45.8185 61.1504 45.8185V45.8185ZM52.7377 45.3224C50.8774 45.3224 49.5228 43.7968 49.5228 41.9365V41.916C49.5228 40.0562 50.8566 38.5517 52.716 38.5517C54.5749 38.5517 55.9293 40.0777 55.9293 41.9365V41.9591C55.9293 43.8193 54.5971 45.3224 52.7377 45.3224ZM52.716 45.8281C54.9935 45.8281 56.5101 43.9909 56.5101 41.9365V41.916C56.5101 39.863 55.0146 38.0464 52.7377 38.0464C50.4591 38.0464 48.9431 39.8847 48.9431 41.9365V41.9591C48.9431 44.0126 50.4374 45.8281 52.716 45.8281ZM42.4411 42.0768V38.6909H45.0081C46.3735 38.6909 47.169 39.3261 47.169 40.3357V40.3582C47.169 41.4427 46.234 42.0765 44.9769 42.0765H42.4411V42.0768ZM41.8811 45.6988H42.4411V42.583H44.9011L47.2983 45.6991H48.0073L45.5247 42.4858C46.7929 42.314 47.7276 41.594 47.7276 40.336V40.3151C47.7276 39.7771 47.5132 39.2726 47.1571 38.9168C46.7064 38.4658 45.9645 38.176 45.0416 38.176H41.8811V45.6991V45.6988ZM37.0754 45.8284C38.3002 45.8284 39.354 45.3016 40.0307 44.7002V41.7982H36.9794V42.3137H39.494V44.4737C38.945 44.9365 38.0532 45.3331 37.0969 45.3331C35.0862 45.3331 33.8721 43.883 33.8721 41.9365V41.916C33.8721 40.0991 35.1518 38.5517 36.9791 38.5517C38.118 38.5517 38.8047 38.9382 39.398 39.4543L39.7628 39.036C39.0098 38.4117 38.2366 38.0464 37.0107 38.0464C34.7645 38.0464 33.2915 39.9053 33.2915 41.9365V41.9591C33.2915 44.0774 34.7 45.8281 37.0754 45.8281V45.8284Z"
					fill="black"
				/>
				<path
					d="M15.5383 38C16.2366 38 16.6935 38.2541 16.9639 39.1552L18.869 45.053C18.869 45.053 19.1639 45.8389 19.433 45.8873H15.6823C14.9834 45.8873 14.3673 45.4958 14.1707 44.7521L12.4628 38.8285C12.4628 38.8285 12.278 38.113 12 38.0003L15.5383 38ZM31.4369 38C31.158 38.113 30.9744 38.8285 30.9744 38.8285L29.2659 44.7524C29.0687 45.4955 28.453 45.8876 27.7549 45.8876H24.0037C24.2721 45.8386 24.5665 45.053 24.5665 45.053L26.4732 39.1552C26.7431 38.2541 27.1997 38.0003 27.8983 38.0003H31.4366L31.4369 38ZM23.831 38V45.8873H19.6056V38H23.831Z"
					fill="#DA1710"
				/>
			</g>
			<defs>
				<clipPath id="clip0_658_13593">
					<rect width="60" height="7.88733" fill="white" transform="translate(12 38)" />
				</clipPath>
			</defs>
		</svg>
	);
};

const DotWBCLogo = (props) => {
	return (
		<svg
			width="84"
			height="84"
			viewBox="0 0 84 84"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			role="img"
			focusable="false"
			{...props}
		>
			<circle cx="42" cy="42" r="41.5" fill="white" stroke="#CFD8DC" />
			<g clipPath="url(#clip0_658_13620)">
				<path
					d="M35.2667 50.6667L30.7333 36.7333C30.1333 34.6 29 34 27.4 34H19C19.6667 34.2667 20.0667 35.9333 20.0667 35.9333L24.1333 49.9333C24.6 51.6667 26.0667 52.6 27.7333 52.6H36.6C35.9333 52.5333 35.2667 50.6667 35.2667 50.6667Z"
					fill="#DA1710"
				/>
				<path
					d="M48.7332 50.6667L53.2666 36.7333C53.8666 34.6 54.9999 34 56.5999 34H64.9999C64.3332 34.2667 63.9332 35.9333 63.9332 35.9333L59.8666 49.9333C59.3999 51.6667 57.9332 52.6 56.2666 52.6H47.3999C48.0666 52.5333 48.7332 50.6667 48.7332 50.6667Z"
					fill="#DA1710"
				/>
				<path d="M47 34H37V52.6667H47V34Z" fill="#DA1710" />
			</g>
			<defs>
				<clipPath id="clip0_658_13620">
					<rect width="46" height="18.6667" fill="white" transform="translate(19 34)" />
				</clipPath>
			</defs>
		</svg>
	);
};

const DotSTGLogo = (props) => {
	return (
		<svg
			width="84"
			height="84"
			viewBox="0 0 84 84"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			role="img"
			focusable="false"
			{...props}
		>
			<circle cx="42" cy="42" r="41.5" fill="white" stroke="#CFD8DC" />
			<g clipPath="url(#clip0_658_13570)">
				<path
					d="M47.7041 50.9951C49.1214 53.2223 51.551 54.842 54.0819 55.1457C58.5362 55.7531 62.6868 53.526 67.1411 55.247C69.1658 55.9556 70.9881 57.2717 72.0004 58.9927C71.0893 58.5877 70.4819 58.284 69.3683 57.9803C67.4448 57.3729 65.8251 57.5754 63.8004 57.8791C60.0547 58.3852 56.309 59.6001 52.7658 57.8791C50.0325 56.563 48.4127 53.8297 47.7041 50.9951Z"
					fill="#FFCD00"
				/>
				<path
					d="M42.9459 33.7853C43.2496 35.0001 42.9459 36.1137 42.7434 37.5309C42.5409 38.7458 42.9459 39.9606 44.0595 40.2643C44.9706 40.568 47.0965 40.4667 48.5138 41.7828C48.9187 42.1877 49.1212 42.289 49.2224 42.9976C49.3237 43.4025 49.2224 43.9087 49.1212 44.2124C48.7163 45.326 48.4126 46.2371 47.7039 47.047C46.6916 48.1606 45.6792 49.1729 44.3632 49.6791C41.8323 50.489 40.415 48.0593 38.4916 46.9458C37.5805 46.4396 36.6693 46.1359 35.8595 47.047C34.5434 48.2618 34.7459 50.2865 35.4545 51.7038C36.7706 54.3359 39.6051 56.6643 41.5286 58.5877C38.0866 59.4988 34.5434 60.41 31.1014 59.3976C29.4817 58.8914 27.9632 56.8667 27.2545 55.3482C26.0397 52.7161 25.2298 46.6421 19.1558 42.289C22.1928 42.6939 23.4076 42.9976 25.3311 41.6816C25.736 41.3779 25.9385 40.8717 25.8372 40.3655C25.5335 38.3408 23.8126 37.2272 22.699 35.81C23.5088 36.1137 24.3187 36.3161 25.2298 36.4174C26.5459 36.6198 27.6595 36.3161 28.773 35.6075C32.3163 33.4816 28.2669 28.6223 28.2669 28.6223C28.2669 28.6223 32.0126 31.3556 34.3409 30.9507C35.1508 30.7482 35.657 30.5458 36.0619 29.8371C37.0743 28.1161 37.9854 26.2939 38.7953 24.4717C38.694 26.1927 38.3903 27.9137 38.8965 29.5334C39.3014 31.0519 40.6175 31.3556 41.8323 32.1655C42.3385 32.4692 42.7434 32.7729 42.9459 33.7853Z"
					fill="#78BE20"
				/>
				<path
					d="M22.8002 37.3286C23.6101 37.8348 24.5212 38.4422 25.2299 39.1508C26.0397 39.9607 27.1533 41.9854 25.736 43.6051C25.2299 44.2125 24.3187 44.5162 23.5089 44.5162C22.294 44.6175 20.6743 44.1113 19.7632 43.4027C19.9657 43.4027 22.8002 43.9088 24.1163 43.3014C24.5212 43.099 25.0274 42.4915 24.7237 41.2767C24.3187 39.7582 22.9015 38.5434 20.4718 37.0249C20.1681 36.8224 19.9657 36.5187 19.8644 36.1138C19.8644 36.1138 21.2817 36.5187 22.8002 37.3286Z"
					fill="#004833"
				/>
				<path
					d="M24.3187 46.8445C24.8249 47.7556 24.9261 48.1606 24.8249 49.3754C24.7236 50.084 24.2174 50.489 23.8125 50.7927C23.8125 50.7927 24.2174 49.2741 23.61 48.1606C22.6989 46.3383 21.8891 46.4396 18.2446 45.0223C17.8397 44.8198 17.3335 44.2124 17.3335 44.1112C17.3335 44.0099 20.2693 44.5161 21.8891 45.0223C22.6989 45.2248 23.8125 46.0346 24.3187 46.8445Z"
					fill="#004833"
				/>
				<path
					d="M36.4667 35.911C35.8593 36.7209 36.0617 38.037 37.0741 38.1382C37.6815 38.1382 38.4914 37.8345 38.6938 37.1259C38.8963 36.4172 38.5926 35.911 38.0864 35.4049C37.6815 35.1012 36.8716 35.4049 36.4667 35.911Z"
					fill="white"
				/>
				<path
					d="M25.4321 37.8349C26.242 38.6448 27.4568 38.746 28.3679 38.1386C29.3802 37.43 29.3802 35.709 29.0765 34.6966C28.4691 31.9633 26.9506 29.5337 24.9259 28.3188C25.9383 30.4448 27.1531 32.7732 27.558 35.1016C27.6593 35.6077 27.7605 36.2151 27.558 36.7213C27.0519 37.7337 25.1284 37.1263 24.2173 36.6201C24.6222 37.025 25.4321 37.8349 25.4321 37.8349Z"
					fill="#004833"
				/>
				<path
					d="M31.81 31.1532C33.531 30.9508 33.531 29.331 33.8347 28.015C34.0371 26.9014 34.5433 25.7878 35.3532 24.7755C35.9606 24.0668 36.2643 23.7631 36.7705 23.1557C37.884 21.7384 38.6939 21.3335 38.6939 21.3335C38.6939 21.3335 36.1631 25.2816 35.6569 27.3063C35.1507 29.0273 35.7581 31.1532 33.8347 32.2668C32.2149 33.1779 30.5952 32.3681 29.3803 31.457C28.7729 30.9508 28.368 30.3434 28.1655 29.5335C29.2791 30.2421 30.2915 31.3557 31.81 31.1532Z"
					fill="#004833"
				/>
				<path
					d="M38.4917 30.6472C39.2003 31.457 40.1114 31.6595 41.0225 32.2669C41.8324 32.8743 42.3386 33.3805 42.6423 34.2916C43.0472 35.6076 42.4398 36.9237 42.4398 38.341C42.6423 40.5681 44.1608 40.5681 46.1855 40.5681C47.4003 40.5681 49.5263 41.5805 49.3238 43.4027C49.2225 44.1114 49.1213 44.6175 48.6151 45.1237C48.109 45.5286 47.5016 45.7311 46.9954 45.3262C48.0077 45.0225 48.3114 44.6175 48.4127 43.6052C48.4127 42.9978 48.109 42.4916 47.9065 42.2891C47.5016 41.8842 46.8942 41.378 45.4769 41.4793C44.3633 41.4793 43.4522 41.5805 42.3386 40.7706C41.8324 40.3657 41.63 40.062 41.3263 39.4546C40.6176 38.0373 41.5287 36.4175 41.3263 34.899C41.225 34.1904 40.4151 33.3805 39.8077 32.8743C38.6942 32.1657 37.5806 31.7607 36.8719 30.5459C35.8596 28.7237 36.7707 26.4965 37.8843 24.6743C37.8843 26.8002 36.9732 29.0274 38.4917 30.6472Z"
					fill="#004833"
				/>
				<path
					d="M39.2003 37.6321C39.8077 36.8222 39.504 35.8099 38.5929 35.405C38.0867 35.2025 37.4793 35.1013 36.8719 35.3037C36.6694 35.3037 36.2645 35.405 36.062 35.8099C36.2645 35.7087 36.6694 35.6074 36.9731 35.6074C37.4793 35.6074 37.5805 35.8099 37.5805 35.8099C37.5805 35.8099 36.8719 36.0124 36.7707 36.5185C36.5682 37.0247 36.7707 37.5309 37.1756 37.7334C37.783 38.3408 38.6941 38.2395 39.2003 37.6321Z"
					fill="#004833"
				/>
				<path
					d="M29.8867 37.2273C30.5953 36.215 31.304 35.3039 32.1139 34.5952C32.0126 35.4051 31.6077 36.215 31.304 37.0248C29.4818 40.973 27.862 43.6051 27.2546 48.8693C26.6472 53.8298 27.862 56.3606 28.5707 57.4742C28.8744 57.8792 28.6719 58.689 28.2669 59.1952C27.7608 59.8026 26.4447 58.9927 26.4447 58.9927C26.4447 58.9927 26.2423 58.3853 26.0398 57.7779C25.5336 56.1582 25.3311 54.4372 25.2299 52.7162C24.9262 47.2495 26.546 41.8841 29.8867 37.2273Z"
					fill="#004833"
				/>
				<path
					d="M41.8323 44.4148C43.6545 45.8321 45.578 46.5408 47.5015 47.3506C47.299 48.0593 47.0965 48.1605 46.4891 48.6667C45.1731 48.2618 43.7558 47.6544 42.7434 46.7432C41.5286 45.6297 40.6175 44.6173 40.1113 42.9976C40.82 43.4025 41.2249 44.0099 41.8323 44.4148Z"
					fill="#004833"
				/>
				<path
					d="M37.6817 45.7311C39.6052 46.0348 40.3138 47.2496 41.6298 48.4644C42.6422 49.3755 43.857 50.0842 45.2743 49.6792C45.0718 50.7928 43.6545 51.0965 42.4397 50.894C40.415 50.5903 40.0101 48.9706 38.694 47.6545C37.7829 46.7434 36.1632 46.8446 35.1508 48.0595C33.8348 49.6792 35.1508 52.4125 36.1632 53.6274C37.2768 54.9434 38.2891 55.9558 39.4027 57.0693C39.4027 57.0693 40.9212 58.5879 41.8323 59.7014C38.694 58.0817 36.5681 56.6644 34.341 53.9311C33.3286 52.615 33.1261 51.5014 33.0249 50.0841C33.0249 48.8693 33.2274 47.857 34.0372 46.8446C35.0496 45.7311 36.2644 45.5286 37.6817 45.7311Z"
					fill="#004833"
				/>
				<path
					d="M46.0841 43.3014C45.6791 43.4027 45.3754 43.9088 45.4767 44.2125C45.6791 44.6175 46.1853 44.7187 46.5902 44.415C46.6915 44.3138 46.8939 44.1113 46.8939 43.9088C46.8939 43.6051 46.6915 43.3014 46.2865 43.2002C46.1853 43.2002 46.0841 43.3014 46.0841 43.3014Z"
					fill="white"
				/>
				<path
					d="M46.3877 42.8965C46.5901 42.8965 46.8938 42.9977 46.9951 43.2002C47.2988 43.4027 47.1976 43.9088 46.8939 44.1113C46.4889 44.415 46.084 44.415 45.7803 44.1113C45.5778 43.8076 45.5778 43.4027 45.7803 43.099C45.9827 42.9977 46.1852 42.8965 46.3877 42.8965Z"
					fill="#004833"
				/>
			</g>
			<defs>
				<clipPath id="clip0_658_13570">
					<rect
						width="54.6667"
						height="38.4691"
						fill="white"
						transform="translate(17.3335 21.3335)"
					/>
				</clipPath>
			</defs>
		</svg>
	);
};

const DotBrandGuidelineLogo = (props) => {
	return (
		<svg
			width="84"
			height="84"
			viewBox="0 0 84 84"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			role="img"
			focusable="false"
			{...props}
		>
			<circle cx="42" cy="42" r="41.5" fill="white" stroke="#CFD8DC" />
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M28.6665 28C28.6665 26.8954 29.5619 26 30.6665 26H47.3332L55.3332 34V56C55.3332 57.1046 54.4377 58 53.3332 58H30.6665C29.5619 58 28.6665 57.1046 28.6665 56V28ZM31.3332 28.6667H47.3332V34H52.6665V55.3333H31.3332V28.6667ZM50.0222 48.1816C50.2313 48.1816 50.5559 48.1396 50.6706 48.0672C50.7843 47.9947 50.7747 47.6434 50.1141 47.4717C49.4577 47.3009 49.253 47.3009 48.593 47.301H48.5725C48.2024 47.301 47.7894 47.3188 47.3405 47.3528C48.5112 47.8651 49.3468 48.1816 50.0222 48.1816ZM38.9123 48.1744C39.1704 47.7015 39.4399 47.2035 39.7146 46.6751C40.3839 45.3823 40.8074 44.3685 41.1224 43.5362C41.7488 44.7011 42.5301 45.6917 43.4462 46.4838C43.5599 46.583 43.6816 46.6823 43.8102 46.7806C41.9439 47.1579 40.3314 47.6166 38.9123 48.1744ZM41.6876 37.7937C41.6701 36.8979 41.4592 35.9422 41.0882 35.9422C40.9185 35.9422 40.9334 37.2993 40.9334 37.2993C40.9334 38.0083 41.0349 39.0946 41.2457 39.7821C41.5003 39.3181 41.7051 38.6896 41.6876 37.7937ZM33.7939 53.1069C34.0039 52.5186 34.8368 51.3554 36.0687 50.3255C36.1457 50.2611 36.3373 50.0796 36.5114 49.9089C35.2235 52.0081 34.3617 52.844 33.7939 53.1069ZM48.569 46.2406C49.828 46.2567 50.6574 46.457 51.0293 46.8325C51.1623 46.9657 51.2839 47.1597 51.3066 47.3153C51.3723 47.8445 51.3233 48.3613 51.0792 48.7368C50.9549 48.9281 50.7519 49.0685 50.5105 49.1328C50.3538 49.1767 50.1614 49.1972 49.9374 49.1972C48.6801 49.1972 46.6878 48.5499 45.0675 47.6174C42.9414 47.942 40.5152 48.5312 38.3838 49.2401C36.5394 52.5311 35.2008 54 34.045 54C33.8306 54 33.6206 53.949 33.4211 53.8471L32.9618 53.6102C32.6731 53.4421 32.6311 53.0782 32.6888 52.7948C32.8664 51.9044 33.9391 50.7815 35.5595 49.7926C35.7511 49.6755 36.5639 49.2348 36.5981 49.2169L37.0731 48.9603C37.5334 48.1548 38.0426 47.2053 38.6008 46.0877L38.6699 45.9492C39.2019 44.8844 39.8038 43.6783 40.285 42.4803L40.4565 42.052C39.7855 39.4307 39.4145 37.4066 39.7741 36.0521C39.8922 35.6221 40.3428 35.3333 40.894 35.3333H40.9027L41.1932 35.3432C41.6893 35.3208 42.0043 35.7231 42.1662 36.1031L42.2169 36.2372C42.2589 36.3624 42.272 36.4089 42.2939 36.5671C42.4505 37.7303 41.8582 41.1687 41.8582 41.1687C41.8293 41.2966 41.8004 41.4217 41.7646 41.5648C42.3114 43.0981 43.1881 44.491 44.2406 45.4941C44.63 45.8678 45.1287 46.1763 45.6117 46.4623C46.6905 46.3077 47.7159 46.2308 48.569 46.2406Z"
				fill="#1976D2"
			/>
		</svg>
	);
};

const GELLogo = (props) => (
	<svg
		width="45"
		height="18"
		viewBox="0 0 45 18"
		fill="none"
		role="img"
		focusable="false"
		xmlns="http://www.w3.org/2000/svg"
		{...props}
	>
		<path
			fill-rule="evenodd"
			clip-rule="evenodd"
			d="M0 9.0977V8.90267C0 3.58565 3.9039 0 9.1501 0C13.2742 0 16.934 1.8782 17.2756 6.41472H12.3225C12.0784 4.7805 11.0288 3.92677 9.17477 3.92677C6.71035 3.92677 5.22153 5.82963 5.22153 8.9759V9.17093C5.22153 12.0004 6.27077 14.1954 9.29663 14.1954C11.7368 14.1954 12.6638 12.9509 12.7617 11.561H9.49212V8.07323H17.6905V10.2197C17.6905 14.6587 14.7869 18 9.1501 18C3.22061 18 0 14.3172 0 9.0977ZM19.1549 0.268756H31.209V4.12192H24.1327V7.12211H29.7692V10.6831H24.1327V13.8537H31.5993V17.7072H19.1549V0.268756ZM38.1393 0.268756H33.1129V17.7072H44.7278V13.8294H38.1393V0.268756Z"
			fill="#122935"
		/>
	</svg>
);

// ============================================================
// Base
// ============================================================
const COLORS = {
	primary: '#C80038',
	background: '#F3F5F6',
	border: '#CFD8DC',
	icon: '#1976D2',
	text: '#122935',
};

const Wrapper = (props) => {
	return (
		<GEL brand={wbc} {...props}>
			<Global styles={{ 'body div': { color: COLORS.text } }} />
			<Home />
		</GEL>
	);
};

// halfway is 35px, 35
const brandsMap = {
	WBC: {
		name: 'Westpac',
		dotLogo: DotWBCLogo,
		logo: <WBCLogo height={17} css={{ marginRight: 14 }} aria-hidden="true" />,
	},
	STG: {
		name: 'St.George',
		dotLogo: DotSTGLogo,
		logo: <STGDragonLogo height={38} css={{ marginRight: 3 }} aria-hidden="true" />,
	},
	BOM: {
		name: 'Bank of Melbourne',
		dotLogo: DotBOMLogo,
		logo: <BOMShieldLogo height={39} css={{ marginRight: 22 }} aria-hidden="true" />,
	},
	BSA: {
		name: 'Bank SA',
		dotLogo: DotBSALogo,
		logo: <BSAStackedLogo height={46} css={{ marginRight: 22 }} aria-hidden="true" />,
	},
	WBG: {
		name: 'Westpac Group',
		dotLogo: DotWBGLogo,
		logo: <WBGLogo width={70} aria-hidden="true" />,
	},
	RAMS: {
		name: 'Rams',
		dotLogo: DotRAMSLogo,
		logo: <RAMSLogo width={70} aria-hidden="true" />,
	},
};

const Grid = (props) => <WBCGrid columnGap={[12, 18, 24]} {...props} />;

const Container = (props) => {
	const mq = useMediaQuery();
	return (
		<WBCContainer
			overrides={{
				Container: {
					styles: (styles) =>
						merge({}, styles, {
							...mq({ paddingLeft: [24, 30, 36, 48, 60], paddingRight: [24, 30, 36, 48, 60] })[0],
						}),
				},
			}}
			{...props}
		/>
	);
};

// ============================================================
// Hero
// ============================================================

const Hero = (props) => {
	const mq = useMediaQuery();
	const { pageHeadingRef } = usePageContext();
	return (
		<div ref={pageHeadingRef} css={{ backgroundColor: COLORS.primary }} {...props}>
			<Container {...props}>
				<Grid rowGap={[0, 0]}>
					<Cell
						width={[11, 10]}
						css={mq({
							marginTop: ['1.875rem', '2.625rem', '3.375rem', '3.75rem', '4.125rem'],
							marginBottom: ['1.5rem', '1.875rem', '2.25rem', '3.375rem'],
						})}
					>
						<GELSvg />
					</Cell>
					<Cell
						top={2}
						left={[2, 3]}
						width={[10, 9]}
						css={mq({ marginBottom: ['2.625rem', '3.375rem', '5.25rem', '5.625rem', '6rem'] })}
					>
						<p
							css={mq({
								fontFamily: '"guardian","Times New Roman","Times",serif',
								fontWeight: 400,
								fontSize: ['1.125rem', null, '1.5rem'],
								fontStyle: 'normal',
								lineHeight: [1.33, null, 1.38],
								WebkitFontSmoothing: 'antialiased',
								color: '#fff',
								margin: 0,
							})}
						>
							The Global Experience Language is our single source of truth, providing everything you
							need to deliver our brand promises and create consistent, coherent customer
							experiences across our entire digital landscape faster, and with less effort.
						</p>
					</Cell>
				</Grid>
			</Container>
		</div>
	);
};

// ============================================================
// Action Bar
// ============================================================

const ButtonIconOverride = ({ icon: Icon, left, right, color, state: _, ...rest }) => (
	<Icon color={COLORS.icon} {...rest} />
);

const ButtonDropdownOverride = ({ state: _, ...props }) => {
	const { LAYOUT } = useBrand();
	return (
		<div
			css={{
				[`@media (min-width: ${LAYOUT.breakpoints.sm}px)`]: { display: 'none' },
			}}
			{...props}
		/>
	);
};

const ButtonOverride = forwardRef(({ closed, setClosed, state: _, children, ...rest }, ref) => {
	const {
		state: { isOpen },
	} = useButtonDropdownContext();

	return (
		<Button
			ref={ref}
			look="unstyled"
			size="large"
			iconAfter={isOpen ? ExpandLessIcon : ExpandMoreIcon}
			block
			overrides={{
				Icon: {
					component: ButtonIconOverride,
					styles: (styles) => ({
						...styles,
						marginLeft: '1rem',
					}),
				},
			}}
			{...rest}
		>
			<GELLogo css={{ marginRight: '0.625rem' }} />
			{children}
		</Button>
	);
});

const PanelOverride = forwardRef(({ state: { isOpen, setClosed }, children, ...rest }, ref) => {
	const [measureRef, { height }] = useMeasure({ polyfill: ResizeObserver });

	const animate = useSpring({
		to: {
			height: !isOpen ? 0 : height,
		},
		onStart: () => {
			setClosed(false);
		},
		onRest: () => {
			setClosed(!isOpen);
		},
	});

	return (
		<animated.div ref={ref} style={animate} aria-hidden={!isOpen} {...rest}>
			<div ref={measureRef}>{children}</div>
		</animated.div>
	);
});

const BrandListItem = ({ children, ...props }) => {
	const mq = useMediaQuery();
	return (
		<li
			css={{
				':last-of-type span': {
					borderBottom: 'none',
				},
			}}
			{...props}
		>
			<a
				href="#"
				css={mq({
					display: 'block',
					height: '3.75rem',
					fontSize: '0.875rem',
					color: COLORS.text,
					textDecoration: 'none',
					padding: ['0 1.5rem', '0 1.875rem'],
					transition: 'background-color 0.2s',
					':hover, :focus': {
						backgroundColor: COLORS.background,
					},
				})}
			>
				<span
					css={{
						height: '100%',
						display: 'flex',
						alignItems: 'center',
						justifyContent: 'space-between',
						borderBottom: `1px solid ${COLORS.border}`,
						position: 'relative',
						zIndex: 1,
					}}
				>
					{children}
				</span>
			</a>
		</li>
	);
};

const ActionBarDropdown = (props) => {
	const [isOpen, setIsOpen] = useState(false);
	const [closed, setClosed] = useState(true);
	const mq = useMediaQuery();
	const handleClick = () => {
		setIsOpen((currentState) => !currentState);
	};

	return (
		<ButtonDropdown
			open={isOpen}
			block
			text="Design System"
			dropdown={false}
			onClick={handleClick}
			closed={closed}
			setClosed={setClosed}
			overrides={{
				ButtonDropdown: {
					component: ButtonDropdownOverride,
				},
				Button: {
					component: ButtonOverride,
					styles: () =>
						mq({
							position: 'relative',
							zIndex: 2,
							padding: ['0 1.5rem 0.75rem', '0 1.875rem 0.75rem'],
							height: '4.125rem',
							fontSize: '1rem',
							backgroundColor: '#fff',
							justifyContent: 'flex-start',
							alignItems: 'flex-end',
							':focus': {
								outlineOffset: `-2px !important`,
							},
						}),
				},
				Panel: {
					component: PanelOverride,
					styles: (_, { closed }) =>
						mq({
							visibility: closed ? 'hidden' : 'visible',
							position: 'absolute',
							zIndex: 1,
							top: '100%',
							left: 0,
							right: 0,
							overflow: 'hidden',
							backgroundColor: '#fff',
							padding: ['0.75rem 0 1.5rem', '0.75rem 0 1.875rem'],
							boxShadow: '0 8px 8px rgba(0,0,0,0.24)',
						}),
				},
			}}
			{...props}
		>
			<ul role="list" css={{ paddingLeft: 0, listStyle: 'none', margin: 0 }}>
				{Object.entries(brandsMap).map(([key, val]) => (
					<BrandListItem key={key}>
						{val.name}
						{val.logo}
					</BrandListItem>
				))}
			</ul>
		</ButtonDropdown>
	);
};

const ActionBarLogo = ({ logo: Logo, ...props }) => {
	return <Logo css={{ height: 72, width: 72, marginRight: 12 }} {...props} />;
};

const ActionBarDesktop = () => {
	const { LAYOUT, TYPE } = useBrand();
	return (
		<Container
			css={{
				display: 'flex',
				alignItems: 'flex-end',
				height: '6.375rem',
				[`@media (max-width: ${LAYOUT.breakpoints.sm - 1}px)`]: { display: 'none' },
			}}
		>
			<div
				css={{
					height: '100%',
					display: 'flex',
					flexDirection: 'column',
					justifyContent: 'flex-end',

					borderRight: `1px solid ${COLORS.border}`,
					marginRight: '1.5rem',
				}}
			>
				<GELLogo css={{ marginBottom: '0.875rem' }} />
				<p
					css={{
						margin: '0 0 0.75rem',
						display: 'flex',
						alignItems: 'flex-end',
						fontSize: '1rem',
						fontFamily: '"graphik",' + TYPE.bodyFont.fontFamily,
					}}
				>
					Design System
					<ArrowRightIcon css={{ margin: '0 1rem 0 0.75rem' }} />
				</p>
			</div>
			<ul role="list" css={{ display: 'flex', paddingLeft: 0, listStyle: 'none', margin: 0 }}>
				{Object.entries(brandsMap).map(([key, val]) => (
					<li key={key}>
						<a href="#" css={{ display: 'flex' }}>
							<ActionBarLogo logo={val.dotLogo} />
						</a>
					</li>
				))}
			</ul>
		</Container>
	);
};
const ActionBar = (props) => {
	const mq = useMediaQuery();
	return (
		<div css={mq({ height: [66, null, 102] })} {...props}>
			<ActionBarDropdown />
			<ActionBarDesktop />
		</div>
	);
};

// ============================================================
// Footer
// ============================================================

const FooterTitle = (props) => {
	const { TYPE } = useBrand();
	const mq = useMediaQuery();
	return (
		<h3
			css={mq({
				fontFamily: '"graphik",' + TYPE.bodyFont.fontFamily,
				fontSize: '1rem',
				textTransform: 'uppercase',
				marginTop: 0,
				marginBottom: ['1.875rem', null, '2.625rem', '3.375rem'],
			})}
			{...props}
		/>
	);
};

const FooterList = (props) => {
	return (
		<Grid
			tag="ul"
			rowGap={['0.375rem', '0.75rem', '1.5rem', null, '0.75rem']}
			css={{ listStyle: 'none', padding: 0, margin: 0 }}
			{...props}
		/>
	);
};

const FooterItem = ({ children, ...props }) => {
	return (
		<Cell tag="li" {...props}>
			<a href="#" css={{ display: 'flex', textDecoration: 'none' }}>
				{children}
			</a>
		</Cell>
	);
};

const FooterItemText = (props) => {
	const { TYPE } = useBrand();

	return (
		<div
			css={{
				flexGrow: 1,
				display: 'inline-flex',
				alignItems: 'center',
				borderBottom: `1px solid ${COLORS.border}`,
				fontFamily: '"graphik",' + TYPE.bodyFont.fontFamily,
			}}
			{...props}
		/>
	);
};

const LogoCircle = ({ logo: Logo, ...props }) => {
	const mq = useMediaQuery();
	return (
		<Logo
			css={mq({
				marginRight: ['0.75rem', null, null, null, '1.125rem'],
				height: [72, null, null, null, 84],
				width: [72, null, null, null, 84],
			})}
			{...props}
		/>
	);
};

const Footer = (props) => {
	const mq = useMediaQuery();
	return (
		<div css={{ backgroundColor: COLORS.background }} {...props}>
			<Container>
				<Grid
					rowGap={[42, 54]}
					css={mq({
						paddingTop: ['3.375rem', '3.75rem', '4.875rem', null, '5.625rem'],
						paddingBottom: ['3.75rem', '4.125rem', '5.25rem', null, '6rem'],
					})}
				>
					<Cell width={[12, null, 8, 7]}>
						<FooterTitle>Design System</FooterTitle>
						<FooterList>
							{Object.entries(brandsMap).map(([key, val]) => (
								<FooterItem key={key} width={[12, 6]}>
									<LogoCircle logo={val.dotLogo} />
									<FooterItemText>{val.name}</FooterItemText>
								</FooterItem>
							))}
						</FooterList>
					</Cell>
					<Cell width={[12, null, 4]} left={[null, null, null, 9]}>
						<FooterTitle>Tools &amp; resources</FooterTitle>
						<FooterList>
							<FooterItem width={[12, 6, 12]}>
								<LogoCircle logo={DotFigmaLogo} />
								<FooterItemText>Figma UI Kits</FooterItemText>
							</FooterItem>
							<FooterItem width={[12, 6, 12]}>
								<LogoCircle logo={DotBrandGuidelineLogo} />
								<FooterItemText>Master Brand Guidelines</FooterItemText>
							</FooterItem>
							<FooterItem width={[12, 6, 12]}>
								<LogoCircle logo={DotSubscribeLogo} />
								<FooterItemText>Subscribe to GEL</FooterItemText>
							</FooterItem>
						</FooterList>
					</Cell>
				</Grid>
			</Container>
		</div>
	);
};

// ============================================================
// Cards
// ============================================================

const CardGrid = ({ children, ...props }) => {
	const mq = useMediaQuery();
	return (
		<Container
			css={mq({
				marginTop: ['1.875rem', '2.25rem', '3rem', '3.375rem', '3.75rem'],
				marginBottom: ['6.4375rem', '6rem', '4.25rem', '6rem', '6.1875rem'],
			})}
			{...props}
		>
			<Grid gap={[24]}>{children}</Grid>
		</Container>
	);
};

const Card = ({ img, ...props }) => {
	const { TYPE } = useBrand();
	const mq = useMediaQuery();
	return (
		<Cell {...props}>
			<a
				href="#"
				css={{
					height: '100%',
					display: 'flex',
					flexDirection: 'column',
					textDecoration: 'none',
					':hover img': { borderRadius: 200 },
				}}
			>
				<img
					css={{
						flexGrow: 1,
						width: '100%',
						minHeight: '250px',
						objectFit: 'cover',
						transition: 'border-radius 0.2s',
					}}
					src={`${BASE_URL}/images/${img}.png`}
					alt=""
				/>
				<div
					css={mq({
						paddingTop: ['1.5rem', '2.4375rem'],
						paddingLeft: '0.375rem',
						borderRight: `solid ${COLORS.border}`,
						borderRightWidth: [0, 1],
					})}
				>
					<h4
						css={{
							margin: '0 0 0.75rem 0',
							fontFamily: '"graphik",' + TYPE.bodyFont.fontFamily,
							fontSize: '1rem',
							textTransform: 'uppercase',
							lineHeight: 1.12,
						}}
					>
						Title goes here.
					</h4>
					<p
						css={{
							margin: '0 1.5rem 0.75rem 0',
							fontSize: '1rem',
							fontFamily: '"graphik",' + TYPE.bodyFont.fontFamily,
							lineHeight: 1.5,
						}}
					>
						Some description
					</p>
					<ArrowRightIcon
						color={COLORS.icon}
						css={mq({ display: 'block', marginLeft: 'auto', marginRight: [0, '0.375rem'] })}
					/>
				</div>
			</a>
		</Cell>
	);
};

// ============================================================
// Home
// ============================================================
// fix main container and footer spacing
const Home = () => {
	return (
		<PageContextProvider>
			<div css={{ paddingBottom: '3.0625rem' }}>
				<Hero />
				<ActionBar />
				<CardGrid>
					<Card width={[12, 4]} img="stream" />
					<Card width={[12, 4]} img="stream" />
					<Card width={[12, 4]} img="stream" />
					<Card width={[12, 6]} img="river" />
					<Card width={[12, 6]} img="river" />
					<Card width={[12, 8]} img="Ocean" />
					<Card width={[12, 4]} img="stream" />
				</CardGrid>
				<Footer />
				<StickyFooter type="article" />
			</div>
		</PageContextProvider>
	);
};

export default Wrapper;
